{"version":3,"sources":["utilities/LocalStorage.js","images/image_default.png","components/Contexts.js","components/New_Note.js","components/QuickPeek.js","components/EditNote.js","utilities/masonry.js","components/NotesBoard.js","components/Header.js","components/SearchBar.js","App.js","index.js"],"names":["getNoteDataFromEditData","edit_note_data","note_id","noteId","note_date","date_created","note_title","title","note_data","slice","locations","links","images","transactions","texts","events","lists","checklists","contacts","j","length","type","push","id","data","console","log","convertNoteDatatoEditData","data_array","i","map","element","list_items","text","image_caption","image_url","link_address","location_address","day","hours","minutes","month","year","contact_value","transaction_amt","transaction_end","transaction_type","EditNoteWithId","username","existing_note_data","JSON","parse","localStorage","getItem","final_note","index","notes","setItem","stringify","AlertContext","React","createContext","UserContext","EditNoteContext","NoteDataContext","EditNoteDataContext","isFoundInArray","target","array","filter","WideInput","props","useContext","NewNoteContext","new_note_data","set_new_note_data","className","placeholder","field_name","value","onChange","e","new_note_new_data","id_value","WiderInput","TextArea","textarea_ref","useRef","useEffect","current","innerText","ref","contentEditable","onBlur","add_url_to_context","ImageInput","useState","default_image","image","set_image","set_alert","input_ref","error_status","set_error_status","file_input_ref","SetImage","new_link","fetch","mode","then","image_obtained","blob","final_url","catch","field","onClick","style","opacity","src","alt","file","files","URL","createObjectURL","name","NoteSegment","NewNoteStackContext","new_note_stack","set_new_note_stack","icon","label","past_note_stack","new_note_data_deleted","unshift","children","get_max_days","generate_days_array","date_array","days_array","starting_index","Date","getDay","CalendarInput","days","set_days","changeYear","factor","changeMonth","months","valid_date","chosen","new_day","TimeInput","change_value","time_string","max_value","Number","TransactionInput","set_transaction_type","new_number","select","CheckListInput","ul_ref","Fragment","check_toggle","check_list_toggle","check","checked","item","c_element","v4","TextAreaInput","tabIndex","NoteTitle","note_title_ref","EditOptions","note_stack","shift","toDateString","substr","ChangeTypeContext","InputContainer","change_type","set_change_type","main_container","scrollIntoView","Provider","ButtonAddNote","set_note_data","user_data","user","new_note_array","json_final_user_data","addNote","OptionsChoice","options_values","getIndexOfMonth","month_string","new_note_element","date","split","new_stack","NewNote","QuickPeek","EditButton","set_edit_note_data","set_edit_note_active","set_edit_note","EditNote","edit_note_bg_ref","edit_active","visible","target_element","list","MasonryObject","options","this","main_className","size","element_base_height","element_base_span","main_array","parent_className","count","new_size","elements_list","document","querySelectorAll","press_array","first_indices_array","height_array","_","height_stack_above","indexOf","offsetHeight","transform","max_height","sort","a","b","querySelector","height","pressed_index","toggle_type","n","Math","ceil","NoteHeading","NoteTransactionBlock","gridTemplateColumns","NoteTextBlock","NoteContactBlock","NoteLinkBlock","gridGap","NoteLocationBlock","NoteListBlock","is_checked","c_index","list_block_id","note_index","d_index","list_block","NoteImageBlock","NoteEventBlock","TitleBlock","parentNode","setTimeout","DeleteNoteWithId","NoteBlock","ResizeContext","NoteCollection","resize_event","set_resize_event","collection_ref","size_ref","window","innerWidth","masonry_object","changeSizeAndMainArray","marginLeft","timeoutIntervalId","onresize","clearTimeout","classList","toggle","SetLayout","contains","NotesBoard","Header","SearchBarCategory","current_category","set_category","SearchBar","UserWrapper","userId","logged_in","set_user_data","user_list","returnUserList","note_array","raw_data","notes_total_count","notes_array","returnNotesList","sessionStorage","removeItem","AddToSession","LoginWindow","MainPage","AppWrapper","alert","set_visible","AlertWindow","status","set_status","session_user","AddFromSession","marginTop","marginBottom","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b8a8fbfa.chunk.js","sourcesContent":["function returnUserList(user){\r\n    let user_list = [];\r\n    for(let i in localStorage){\r\n        if(i.substr(0,4) === \"User\"){\r\n            user_list.push(i.substr(4));\r\n        }\r\n    }\r\n    return user_list;\r\n}\r\n\r\nfunction addUser(user){\r\n    if(localStorage.getItem(`User${user.username}`))\r\n    {return;}\r\n    localStorage.setItem(`User${user.username}`,JSON.stringify(user));\r\n}\r\n\r\nfunction addNote(user, note_data){\r\n    let new_note_array = JSON.parse(localStorage.getItem(`User${user.username}`));\r\n    if(new_note_array['notes']){\r\n        new_note_array['notes'].push(note_data);\r\n    }\r\n    else{\r\n        new_note_array['notes'] = [];\r\n        new_note_array['notes'].push(note_data);\r\n    }\r\n    let json_final_user_data = JSON.stringify(new_note_array);\r\n    localStorage.setItem(`User${user.username}`, json_final_user_data);\r\n}\r\n\r\nfunction getNoteDataFromEditData(edit_note_data){\r\n    let note_id = edit_note_data[0].noteId;\r\n    let note_date = edit_note_data[0].date_created;\r\n    let note_title = edit_note_data[0].title;\r\n    let note_data = edit_note_data.slice(1);\r\n    let locations = [];\r\n    let links = [];\r\n    let images = [];\r\n    let transactions = [];\r\n    let texts = [];\r\n    let events = [];\r\n    let lists = [];\r\n    let checklists = [];\r\n    let contacts = [];\r\n    for(let j=0;j<note_data.length;j++){\r\n        switch(note_data[j].type){\r\n            case 0 : contacts.push({id:note_data[j].id, data:note_data[j].data});\r\n            break;\r\n            case 1 : links.push({id:note_data[j].id, data:note_data[j].data});\r\n            break;\r\n            case 2 : images.push({id:note_data[j].id, data:note_data[j].data});\r\n            break;\r\n            case 3 : events.push({id:note_data[j].id, data:note_data[j].data});\r\n            break;\r\n            case 4 : transactions.push({id:note_data[j].id, data:note_data[j].data});\r\n            break;\r\n            case 5 : locations.push({id:note_data[j].id, data:note_data[j].data});\r\n            break;\r\n            case 6 : checklists.push({id:note_data[j].id, data:note_data[j].data});\r\n            break;\r\n            case 7 : texts.push({id:note_data[j].id, data:note_data[j].data});\r\n            break;\r\n            case 8 : lists.push({id:note_data[j].id, data:note_data[j].data});\r\n            break;\r\n            default: console.log('invalid type')\r\n        }\r\n    }\r\n    return ({id:note_id,date_created:note_date,title:note_title, locations , texts, links, events, checklists, transactions, images, contacts, lists});\r\n\r\n};\r\n\r\nfunction returnNotesList(){\r\n    let note_array = [];\r\n    for(let i in localStorage){\r\n        if(i.substr(0,4) === 'User'){\r\n            //perform suitable operations and categorize data into titles and actual data  , return both in a dictionary in the end\r\n            let raw_data = JSON.parse(localStorage.getItem(i));\r\n            //we are interested in raw_data.notes\r\n            if(!raw_data.notes){\r\n                return;\r\n            }\r\n            let notes_total_count = raw_data.notes.length;\r\n            let notes_array = raw_data['notes'];\r\n            for(let i = 0;i<notes_total_count;i++){\r\n                note_array.unshift(getNoteDataFromEditData(notes_array[i]));\r\n            }\r\n\r\n        }\r\n    }\r\n    return note_array;\r\n}\r\n\r\nfunction getUserId(username){\r\n    return JSON.parse(localStorage.getItem(`User${username}`))['userId'];\r\n}\r\n\r\nfunction AddFromSession(){\r\n    for(let i in sessionStorage){\r\n        if(i.substr(0,4) === 'User'){\r\n            //found\r\n            return sessionStorage.getItem(i);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction AddToSession(user){\r\n    for(let i in sessionStorage){\r\n        if(i.substr(0,4)==='User'){\r\n            sessionStorage.removeItem(i);\r\n        }\r\n    }\r\n        sessionStorage.setItem(`User${user.username}`, JSON.stringify(user));\r\n}\r\n\r\n\r\nfunction convertNoteDatatoEditData(note_data){\r\n// note_array.push({id:note_id,date_created:note_date,title:note_title, locations , texts, links, events, checklists, transactions, images, contacts, lists});\r\n    let data_array = [{type:-1, date_created:note_data.date_created,title:note_data.title || '', noteId:note_data.id}];\r\n    for(let i in note_data){\r\n        if(i === 'checklists'){\r\n            note_data[i].map((element)=>{\r\n                data_array.push({type:6,id:element.id,data:{list_items:element.data.list_items, title:element.data.title}});\r\n                return null;\r\n            })\r\n        }\r\n        else if(i === 'lists'){\r\n            note_data[i].map((element)=>{\r\n                data_array.push({type:8,id:element.id,data:{list_items:element.data.list_items, title:element.data.title}});\r\n                return null;\r\n            })\r\n        }\r\n        else if(i === 'texts'){\r\n            note_data[i].map((element)=>{\r\n                data_array.push({type:7,id:element.id,data:{text:element.data.text}});\r\n                return null;\r\n            })\r\n        }\r\n        else if(i === 'images'){\r\n            note_data[i].map((element)=>{\r\n                data_array.push({type:2,id:element.id,data:{image_caption:element.data.image_caption, image_url:element.data.image_url, title:element.data.title}});\r\n                return null;\r\n            })\r\n        }\r\n        else if(i === 'links'){\r\n            note_data[i].map((element)=>{\r\n                data_array.push({type:1,id:element.id,data:{title:element.data.title, link_address:element.data.link_address}});\r\n                return null;\r\n            })\r\n        }\r\n        else if(i === 'locations'){\r\n            note_data[i].map((element)=>{\r\n                data_array.push({type:5,id:element.id,data:{title:element.data.title, location_address:element.data.location_address}});\r\n                return null;\r\n            })\r\n        }\r\n        else if(i === 'events'){\r\n            note_data[i].map((element)=>{\r\n                data_array.push({type:3,id:element.id,data:{title:element.data.title , day:element.data.day, hours:element.data.hours, minutes:element.data.minutes, month:element.data.month, year:element.data.year}});\r\n                return null;\r\n            })\r\n        }\r\n        else if(i === 'contacts'){\r\n            note_data[i].map((element)=>{\r\n                data_array.push({type:0,id:element.id,data:{title:element.data.title , contact_value:element.data.contact_value}});\r\n                return null;\r\n            })\r\n        }\r\n        else if(i === 'transactions'){\r\n            note_data[i].map((element)=>{\r\n                data_array.push({type:4,id:element.id,data:{transaction_amt:element.data.transaction_amt, transaction_end:element.data.transaction_end, transaction_type:element.data.transaction_type}});\r\n                return null;\r\n            })\r\n        }\r\n    }\r\n    return data_array;\r\n}\r\n\r\nfunction EditNoteWithId(note_data, username){\r\n    let existing_note_data = JSON.parse(localStorage.getItem(`User${username}`));\r\n    let noteData = existing_note_data['notes'];\r\n\r\n    let final_note = noteData.map((element, index)=>{\r\n        if(element[0].noteId === note_data[0].noteId){\r\n            return note_data;\r\n        }\r\n        return element;\r\n    })\r\n\r\n    existing_note_data.notes = final_note;\r\n    localStorage.setItem(`User${username}`,JSON.stringify(existing_note_data));\r\n    }\r\n    //     console.log(element);\r\n\r\nfunction DeleteNoteWithId(noteId, username){\r\n    let existing_note_data = JSON.parse(localStorage.getItem(`User${username}`));\r\n    let new_note_data = existing_note_data['notes'].filter((element)=>{\r\n        return element[0].noteId !== noteId;\r\n    })\r\n\r\n    existing_note_data['notes'] = new_note_data;\r\n    localStorage.setItem(`User${username}`,JSON.stringify(existing_note_data));\r\n}\r\n\r\nexport {addNote, returnNotesList, getNoteDataFromEditData, addUser, returnUserList, getUserId, AddFromSession, AddToSession, convertNoteDatatoEditData, EditNoteWithId, DeleteNoteWithId};","export default __webpack_public_path__ + \"static/media/image_default.1b46f609.png\";","import React from 'react';\r\n\r\nlet AlertContext = React.createContext();\r\nlet UserContext = React.createContext();\r\nlet EditNoteContext = React.createContext();\r\nlet NoteDataContext = React.createContext();\r\nlet EditNoteDataContext = React.createContext();\r\n\r\nexport {AlertContext, UserContext, EditNoteContext, EditNoteDataContext, NoteDataContext};","import React, {useState, useRef, useContext, useEffect} from 'react';\r\nimport {addNote, getNoteDataFromEditData} from '../utilities/LocalStorage';\r\nimport {v4} from 'uuid';\r\n\r\nimport default_image from '../images/image_default.png';\r\nimport {AlertContext, NoteDataContext, UserContext} from './Contexts';\r\n\r\nfunction isFoundInArray(target, array){\r\n    return (array.filter((element, index)=>{\r\n        return element === target;\r\n    }).length);\r\n}\r\n\r\nfunction WideInput(props){\r\n    let [new_note_data,set_new_note_data] = useContext(NewNoteContext);\r\n    return(\r\n        <input type=\"text\" className=\"wide-input\" placeholder={props.field_name}\r\n        value={new_note_data[props.index].data[props.type] || ''}\r\n        onChange={(e)=>{\r\n            let new_note_new_data = new_note_data.map((element, index)=>{\r\n                if(element.id === props.id_value){\r\n                    element.data[props.type] = e.target.value;\r\n                }\r\n                return element;\r\n            })\r\n            set_new_note_data(new_note_new_data);\r\n        }}/>\r\n    )\r\n}\r\n\r\nfunction WiderInput(props){\r\n    let [new_note_data,set_new_note_data] = useContext(NewNoteContext);\r\n    return(\r\n        <input type=\"text\" className=\"wider-input\"\r\n        value={new_note_data[props.index].data[props.type] || ''}\r\n         placeholder={props.field_name} onChange={(e)=>{\r\n            let new_note_new_data = new_note_data.map((element, index)=>{\r\n                if(element.id === props.id_value){\r\n                    element.data[props.type] = e.target.value;\r\n                }\r\n                return element;\r\n            })\r\n            set_new_note_data(new_note_new_data)\r\n        }}\r\n       />\r\n    )\r\n}\r\n\r\n\r\nfunction TextArea(props){\r\n    let new_note_data = useContext(NewNoteContext)[0];\r\n    let textarea_ref = useRef(null);\r\n    useEffect(()=>{\r\n        textarea_ref.current.innerText = (new_note_data[props.index].data[props.type] || '');\r\n    },[new_note_data,props.index,props.type])\r\n    return(\r\n            <div className=\"textarea image\" ref={textarea_ref} contentEditable=\"true\" onBlur={(e)=>{\r\n                props.add_url_to_context('image_caption', e.target.innerText);\r\n            }}/>\r\n    );\r\n}\r\n\r\nfunction ImageInput(props){\r\n    let [image, set_image] = useState(default_image);\r\n    let [new_note_data, set_new_note_data] = useContext(NewNoteContext);\r\n    let set_alert = useContext(AlertContext)[1];\r\n    let input_ref = useRef(null);\r\n    let [error_status, set_error_status] = useState(0);\r\n    let file_input_ref = useRef(null);\r\n\r\n    function SetImage(){\r\n        let new_link = input_ref.current.value;\r\n        if(new_link === ''){\r\n            set_image(default_image);\r\n            return;\r\n        }\r\n        fetch(new_link, {\r\n            mode:'cors',\r\n        }).then((image_obtained)=>{\r\n            image_obtained.blob().then((final_url)=>{\r\n                set_image(new_link);\r\n                set_error_status(0);\r\n                add_url_to_context('image_url', new_link);\r\n                add_url_to_context('title', 'Image');\r\n            })\r\n        }).catch((e)=>{\r\n            console.log(e);\r\n            set_error_status(1);\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        SetImage();\r\n    },[])\r\n\r\n    function add_url_to_context(field, value){\r\n            set_new_note_data(new_note_data.map((element, index)=>{\r\n                if(element.id === props.id_value){\r\n                    element.data[field] = value;\r\n                }\r\n                return element;\r\n            }))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"image-input\">\r\n            <input type=\"text\" className=\"inline-input\" ref={input_ref} placeholder={props.field_name} value={new_note_data[props.index].data.image_url || ''} onChange={()=>{\r\n                SetImage();\r\n            }}/>\r\n            <button className=\"choose-image\" onClick={()=>{\r\n                // file_input_ref.current.click();\r\n                set_alert([1,'Currently Not Supported']);\r\n            }}></button>\r\n            <span className=\"in-error\" style={{opacity:error_status}}>Invalid File / Link</span>\r\n            <img src={image} className=\"image-preview\" alt=\"could not load\"/>\r\n            <input type=\"file\" ref={file_input_ref} onChange={(e)=>{\r\n                let file = e.target.files[0];\r\n                if(isFoundInArray(file.type, ['image/svg+xml', 'image/png', 'image/jpg', 'image/jpeg']))\r\n                {\r\n                    //file is in valid format\r\n                    set_image(URL.createObjectURL(file));\r\n                    input_ref.current.value = file.name;\r\n                    set_error_status(0);\r\n                    add_url_to_context('image_url', image);\r\n                    add_url_to_context('title', file.name);\r\n                }\r\n                else{\r\n                    set_error_status(1);\r\n                }\r\n            }}/>\r\n            <TextArea type=\"image_caption\" index={props.index} add_url_to_context={add_url_to_context}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction NoteSegment(props){\r\n    let [new_note_data, set_new_note_data] = useContext(NewNoteContext);\r\n    let [new_note_stack, set_new_note_stack] = useContext(NewNoteStackContext);\r\n    return(\r\n        <div className=\"note-segment\">\r\n            <div className=\"segment-header\">\r\n                <span icon={props.icon}></span>\r\n                <span>{props.label}</span>\r\n                <span onClick={()=>{\r\n                    let past_note_stack = new_note_stack;\r\n                    let new_note_data_deleted =  new_note_data.filter((element, index)=>{\r\n                        return element.id !== props.id_value;\r\n                    })\r\n                    past_note_stack.unshift(new_note_data);\r\n                    set_new_note_stack(past_note_stack);\r\n                    set_new_note_data(new_note_data_deleted);\r\n                }}></span>\r\n            </div>\r\n            {props.children}\r\n            <footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction get_max_days(month , year){\r\n    if(isFoundInArray(month, [1, 3, 5, 7, 8, 10, 12])){\r\n        return 31;\r\n    }\r\n    else if(isFoundInArray(month, [4, 6, 9, 11]))\r\n    {\r\n        return 30;\r\n    }\r\n    else {\r\n        if(year % 4 === 0){return 29}\r\n        else{return 28}\r\n    }\r\n}\r\n\r\n\r\nfunction generate_days_array(date_array){\r\n    let [_ , month, year] = date_array;\r\n    let new_date = new Date(year, month - 1, 1);\r\n    let days_array = [];\r\n    let j = 0;\r\n    let starting_index = new_date.getDay();\r\n    for(let i = 0; i<42; i++){\r\n        if(i >= starting_index && j < get_max_days(month, year)){\r\n            days_array.push(++j);\r\n        }\r\n        else{\r\n            days_array.push(' ');\r\n        }\r\n    }\r\n    return days_array;\r\n}\r\n\r\nfunction CalendarInput(props){\r\n    let [days, set_days] = useState(generate_days_array([1, 1, 2000]));\r\n    let [new_note_data, set_new_note_data] = useContext(NewNoteContext);\r\n\r\n    useEffect(()=>{\r\n        set_days(generate_days_array([new_note_data[props.index].data.day, new_note_data[props.index].data.month, new_note_data[props.index].data.year]))\r\n    },[new_note_data, props.index])\r\n\r\n    function changeYear(factor){\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(element.id === props.id_value){\r\n                element.data.year += factor;\r\n            }\r\n            return element;\r\n        }))\r\n        set_days(generate_days_array([1,new_note_data[props.index].data.month, new_note_data[props.index].data.year]))\r\n    }\r\n    function changeMonth(factor){\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(element.id === props.id_value){\r\n                if(factor === -1){\r\n                    if(element.data.month === 1){\r\n                        element.data.month = 12;\r\n                    }\r\n                    else{\r\n                        element.data.month += factor;\r\n                    }\r\n                }\r\n                if(factor === 1){\r\n                    if(element.data.month === 12){\r\n                        element.data.month = 1;\r\n                    }\r\n                    else{\r\n                        element.data.month += factor;\r\n                    }\r\n                }\r\n            }\r\n            return element;\r\n        }))\r\n        set_days(generate_days_array([1,new_note_data[props.index].data.month, new_note_data[props.index].data.year]))\r\n    }\r\n    function changeDay(new_day){\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(element.id === props.id_value){\r\n                element.data.day = new_day;\r\n            }\r\n            return element;\r\n        }))\r\n    }\r\n\r\n\r\n    let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep','Oct', 'Nov', 'Dec'];\r\n    return(\r\n        <div className=\"calendar\">\r\n            <div className=\"top-btn-group\">\r\n                <div>\r\n                    <span onClick={()=>{\r\n                        changeYear(1);\r\n                    }}>+</span>\r\n                    <span>{new_note_data[props.index].data.year}</span>\r\n                    <span onClick={()=>{\r\n                        changeYear(-1)\r\n                    }}>-</span>\r\n                </div>\r\n                <div>\r\n                    <span onClick={()=>{changeMonth(1)}}>+</span>\r\n                    <span>{months[new_note_data[props.index].data.month - 1]}</span>\r\n                    <span onClick={()=>{changeMonth(-1)}}>-</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"week-column\">\r\n                <span>Sun</span>\r\n                <span>Mon</span>\r\n                <span>Tue</span>\r\n                <span>Wed</span>\r\n                <span>Thu</span>\r\n                <span>Fri</span>\r\n                <span>Sat</span>\r\n            </div>\r\n            <div className=\"days\">\r\n                {days.map((element, index)=>{\r\n                    if(element !== ' '){\r\n                        if(element == new_note_data[props.index].data.day){\r\n                            return <span key={index} valid_date=\"1\" chosen=\"1\">{element}</span>\r\n                        }\r\n                        else{\r\n                            return <span key={index} valid_date=\"1\" onClick={()=>{\r\n                                changeDay(element);\r\n                            }}>{element}</span>\r\n                        }\r\n                    }\r\n                    else{\r\n                        return <span key={index} valid_date=\"0\"></span>\r\n                    }\r\n                })}\r\n            </div>\r\n            <div className=\"date-selected\">\r\n                <span>Selected Date</span>\r\n                <span>{new_note_data[props.index].data.day} {months[new_note_data[props.index].data.month - 1]} {new_note_data[props.index].data.year}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TimeInput(props){\r\n    let [new_note_data, set_new_note_data] = useContext(NewNoteContext);\r\n    function change_value(time_string , factor, max_value){\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(element.id === props.id_value){\r\n                if(factor > 0){\r\n                    if(element.data[time_string] === max_value){\r\n                        element.data[time_string] = 0;\r\n                    }\r\n                    else{\r\n                        element.data[time_string] = Number(element.data[time_string]) + 1;\r\n                    }\r\n                }\r\n                else if(factor === 0){\r\n                    if(element.data[time_string] === 0){\r\n                        element.data[time_string] = max_value;\r\n                    }\r\n                    else{\r\n                        element.data[time_string] = Number(element.data[time_string]) - 1;\r\n                    }\r\n                }\r\n            }\r\n            return element;\r\n        }))\r\n    }\r\n    return(\r\n        <div className='time-input'>\r\n            <div className=\"time-block\">\r\n                <span onClick={()=>{change_value('hours',0,23)}}>-</span>\r\n                <span>{new_note_data[props.index].data['hours']}</span>\r\n                <span onClick={()=>{change_value('hours',1,23)}}>+</span>\r\n            </div>\r\n            <div className=\"time-block\">\r\n                <span onClick={()=>{change_value('minutes',0,59)}}>-</span>\r\n                <span>{new_note_data[props.index].data['minutes']}</span>\r\n                <span onClick={()=>{change_value('minutes',1,59)}}>+</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TransactionInput(props){\r\n    let [new_note_data, set_new_note_data] = useContext(NewNoteContext);\r\n    function set_transaction_type(new_number){\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(element.id === props.id_value){\r\n                element.data.transaction_type = new_number;\r\n            }\r\n            return element;\r\n        }))\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"transaction-input\">\r\n\r\n            <div select={(new_note_data[props.index].data.transaction_type === 0 ? 1 : 0)} onClick={()=>{\r\n                set_transaction_type(0);\r\n            }}>Paid/Lent To</div>\r\n            <div select={(new_note_data[props.index].data.transaction_type === 1 ? 1 : 0)} onClick={()=>{\r\n                set_transaction_type(1);\r\n            }}>Received By</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction CheckListInput(props){\r\n    let [new_note_data, set_new_note_data] = useContext(NewNoteContext);\r\n\r\n    function add_new_item(item){\r\n\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(props.id_value === element.id){\r\n                element.data.list_items = [...element.data.list_items || [], item ];\r\n            }\r\n            return element;\r\n        }));\r\n    }\r\n    function delete_new_item(item){\r\n\r\n\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(props.id_value === element.id){\r\n                element.data.list_items = element.data.list_items.filter((c_element)=>{\r\n                    return c_element.id !== item.id;\r\n                })\r\n            }\r\n            return element;\r\n        }));\r\n\r\n    }\r\n\r\n    function check_toggle_item(item){\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(props.id_value === element.id){\r\n                element.data.list_items =  element.data.list_items.map((c_element)=>{\r\n                    if(c_element.id === item.id){\r\n                        c_element.checked=Number(!item.checked);\r\n                    }\r\n                    return c_element;\r\n                })\r\n            }\r\n            return element;\r\n        }));\r\n    }\r\n    function change_item_value(item){\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(props.id_value === element.id){\r\n                element.data.list_items =  element.data.list_items.map((c_element)=>{\r\n                    if(c_element.id === item.id){\r\n                        c_element.item=item.item;\r\n                    }\r\n                    return c_element;\r\n                })\r\n            }\r\n            return element;\r\n        }));\r\n    }\r\n\r\n\r\n    let ul_ref = useRef(null);\r\n    return(\r\n        <React.Fragment>\r\n            <ul className=\"checklist\" check_toggle={props.check_list_toggle} ref={ul_ref}>\r\n            {(new_note_data[props.index].data.list_items || []).map((element, index)=>{\r\n                return <li key={element.id} check={element.checked}>\r\n                    <span  onClick={()=>{\r\n                        check_toggle_item(element);\r\n                    }}></span>\r\n                    <input placeholder={'Enter Item Info ...'} value={element.item} type=\"text\" onChange={(e)=>{\r\n                        change_item_value({checked:element.checked,id:element.id,item:e.target.value});\r\n                    }}/>\r\n                    <span onClick={()=>{\r\n                        delete_new_item(element)\r\n                    }}></span>\r\n                </li>\r\n            })}\r\n            </ul>\r\n            <button onClick={()=>{\r\n                //add new elements\r\n                add_new_item({checked:'0',item:'',id:v4()});\r\n            }}><i></i>Add Item</button>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction TextAreaInput(props){\r\n    let [new_note_data, set_new_note_data] = useContext(NewNoteContext);\r\n    let textarea_ref = useRef(null);\r\n    useEffect(()=>{\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(element.id === props.id_value)\r\n            {\r\n                element.data['title'] = 'Text';\r\n            }\r\n            return element;\r\n        })\r\n    )\r\n        textarea_ref.current.innerText = new_note_data[props.index].data['text'] || '';\r\n    },[])\r\n\r\n\r\n    return(\r\n        <div className=\"input-body\" ref={textarea_ref} contentEditable=\"true\" tabIndex=\"0\" onBlur={(e)=>{\r\n            set_new_note_data(new_note_data.map((element)=>{\r\n                if(element.id === props.id_value){\r\n                    element.data['text'] = e.target.innerText;\r\n                }\r\n                return element;\r\n            }))\r\n        }}>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction NoteTitle(props){\r\n    let [new_note_data, set_new_note_data] = useContext(NewNoteContext);\r\n    let note_title_ref = useRef(null);\r\n    useEffect(()=>{\r\n        note_title_ref.current.innerText = new_note_data[0].title || '';\r\n    },[props.title , new_note_data])\r\n    return(\r\n        <div className=\"note-title\" ref={note_title_ref} onBlur={()=>{\r\n            set_new_note_data(new_note_data.map((element, index)=>{\r\n                if(element.type === -1){\r\n                    element.title = note_title_ref.current.innerText;\r\n                }\r\n                return element;\r\n            }))\r\n        }} contentEditable=\"true\"/>\r\n    )\r\n}\r\n\r\nfunction EditOptions(props){\r\n    let set_new_note_data = useContext(NewNoteContext)[1];\r\n    let [new_note_stack, set_new_note_stack] = useContext(NewNoteStackContext);\r\n    return(\r\n      <div className=\"edit-options\">\r\n          <span onClick={()=>{\r\n              let note_stack = new_note_stack;\r\n              if(note_stack.length > 0){\r\n                  set_new_note_stack(note_stack);\r\n                  set_new_note_data(note_stack.shift())\r\n                  }\r\n          }}></span>\r\n          <span onClick={()=>\r\n              {\r\n                set_new_note_data([{type:-1,noteId:v4(),date_created:(new Date()).toDateString().substr(4), title:''},{type:7,data:{},id:v4(), index:0}])\r\n              }\r\n          }></span>\r\n\r\n      </div>\r\n    )\r\n}\r\n\r\nlet NewNoteContext = React.createContext();\r\nlet NewNoteStackContext = React.createContext();\r\nlet ChangeTypeContext = React.createContext();\r\nfunction InputContainer(props){\r\n    let [new_note_data, set_new_note_data] = useState(props.data || [{type:-1,noteId:v4(),title:'',date_created:(new Date()).toDateString().substr(4)},{type:7,data:{},id:v4(), index:0}]);\r\n    let [new_note_stack , set_new_note_stack] = useState([]);\r\n    let [change_type, set_change_type] = useState(0);\r\n    let main_container = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        if(!main_container.current.children[main_container.current.children.length - 1]){\r\n            return;\r\n        }\r\n        main_container.current.children[main_container.current.children.length - 1].scrollIntoView(1);\r\n    }, [change_type])\r\n\r\n    useEffect(()=>{\r\n        set_new_note_data(props.data);\r\n    },[props.data] )\r\n\r\n    return <NewNoteContext.Provider value={[new_note_data, set_new_note_data]}>\r\n    <NewNoteStackContext.Provider value={[new_note_stack, set_new_note_stack]}>\r\n    <ChangeTypeContext.Provider value={[change_type, set_change_type]}>\r\n        <div className=\"input-container-inner\" ref={main_container}>\r\n            {new_note_data.map((element, index)=>{\r\n            switch(element.type){\r\n                    case 7: return (<NoteSegment key={element.id} label={\"Text\"} icon={\"8\"} id_value = {element.id}>\r\n                        <TextAreaInput id_value={element.id}  index={index}/>\r\n                    </NoteSegment>);\r\n                    case 0: return (<NoteSegment key={element.id} label={\"Contact\"} icon={\"0\"} id_value = {element.id}>\r\n                            <WideInput field_name={\"Name goes here ...\"}  type=\"title\" id_value={element.id} index={index} />\r\n                            <WideInput field_name={\"Contact goes here ...\"}  type=\"contact_value\" id_value={element.id} index={index}  />\r\n                        </NoteSegment>\r\n                    )\r\n                    case 5: return (<NoteSegment key={element.id} label={\"Location\"} icon={\"1\"} id_value = {element.id} >\r\n                            <WideInput field_name=\"Location Name goes here ...\"  type=\"title\" id_value={element.id} index={index}/>\r\n                            <WiderInput field_name=\"Exact Address goes here ...\" type=\"location_address\" id_value={element.id} index={index}/>\r\n                        </NoteSegment>\r\n                    )\r\n                    case 1: return ( <NoteSegment label={\"Link\"} key={element.id} icon={\"2\"} id_value = {element.id} >\r\n                        <WideInput field_name=\"Link Name goes here ...\"  type=\"title\" id_value={element.id} index={index}  />\r\n                        <WiderInput field_name=\"Link Address goes here ...\" type=\"link_address\" id_value={element.id} index={index} />\r\n                    </NoteSegment>\r\n                    )\r\n                    case 2: return (\r\n                    <NoteSegment label={\"Image\"} icon={\"3\"} key={element.id} id_value = {element.id}>\r\n                            <ImageInput field_name=\"Select Image or paste link ...\" id_value={element.id}  index={index}/>\r\n                        </NoteSegment>\r\n                    )\r\n                    case 3: return(\r\n                    <NoteSegment label={\"Event\"} icon={\"4\"} key={element.id} id_value = {element.id}>\r\n                        <WiderInput field_name=\"Event Name goes here ...\" id_value={element.id} type=\"title\" index={index}/>\r\n                        <CalendarInput id_value = {element.id} index={index} />\r\n                        <TimeInput id_value = {element.id} index={index} />\r\n                    </NoteSegment>\r\n                    )\r\n                    case 4: return(\r\n                        <NoteSegment label={\"Transaction\"} icon={\"5\"} key={element.id} id_value = {element.id}>\r\n                            <TransactionInput id_value={element.id}  index={index}/>\r\n                            <WideInput field_name=\"Name of Person / Store\"  type=\"transaction_end\" id_value={element.id}  index={index}/>\r\n                            <WideInput field_name=\"Enter the Amount ...\"  type=\"transaction_amt\" id_value={element.id}  index={index}/>\r\n                        </NoteSegment>\r\n                    )\r\n                    case 6: return(\r\n                        <NoteSegment label={\"CheckList\"} icon={\"6\"} key={element.id} id_value = {element.id}>\r\n                            <WideInput field_name=\"Enter the list title ...\"  type=\"title\" id_value={element.id}  index={index}/>\r\n                            <CheckListInput check_list_toggle = {1} id_value={element.id} index={index} />\r\n                        </NoteSegment>\r\n                    )\r\n                    case 8: return(\r\n                            <NoteSegment label={\"List\"} icon={\"7\"} key={element.id} id_value = {element.id} index={index}>\r\n                            <WideInput field_name=\"Enter the list title ...\" type=\"title\" id_value={element.id} index={index}/>\r\n                            <CheckListInput check_list_toggle = {0} id_value={element.id} index={index}/>\r\n                        </NoteSegment>\r\n                    )\r\n                    case -1: return(\r\n                        <NoteTitle key={\"note-title\"} title={element.title}/>\r\n                    )\r\n                    default :return (null);\r\n\r\n            }})\r\n            }</div>\r\n\r\n            {props.children}\r\n</ChangeTypeContext.Provider>\r\n</NewNoteStackContext.Provider>\r\n    </NewNoteContext.Provider>\r\n\r\n}\r\n\r\nfunction ButtonAddNote(props){\r\n    let [new_note_data , set_new_note_data] = useContext(NewNoteContext);\r\n    let [note_data, set_note_data] = useContext(NoteDataContext);\r\n    let set_alert = useContext(AlertContext)[1];\r\n    let user_data = useContext(UserContext)[0];\r\n    return(\r\n        <div onClick={()=>{\r\n                addNote(user_data, new_note_data);\r\n                set_note_data([ getNoteDataFromEditData(new_note_data),...note_data]);\r\n                set_new_note_data([{type:-1,noteId:v4(),date_created:(new Date()).toDateString().substr(4), title:''},{type:7,data:{},id:v4(), index:0}]);\r\n                set_alert([2,'Note Added Succesfully']);\r\n        }}>\r\n            <span></span>\r\n            <span>Save Note</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction OptionsChoice(props){\r\n    let [new_note_data, set_new_note_data] = useContext(NewNoteContext);\r\n    let [new_note_stack,set_new_note_stack] = useContext(NewNoteStackContext);\r\n    let [change_type, set_change_type] = useContext(ChangeTypeContext);\r\n    let options_list = [0, 1, 2, 3, 4, 5, 6, 7, 8]\r\n    let options_values = ['Add Contact','Add Link', 'Add Location', 'Add Event', 'Add Payment','Add Location', 'Add Checklist','Add Text','Add List'];\r\n    function getIndexOfMonth(month_string){\r\n        switch(month_string){\r\n            case 'Jan' : return 1;\r\n            case 'Feb' : return 2;\r\n            case 'Mar' : return 3;\r\n            case 'Apr' : return 4;\r\n            case 'May' : return 5;\r\n            case 'Jun' : return 6;\r\n            case 'Jul' : return 7;\r\n            case 'Aug' : return 8;\r\n            case 'Sep' : return 9;\r\n            case 'Oct' : return 10;\r\n            case 'Nov' : return 11;\r\n            case 'Dec' : return 12;\r\n            default:return -1;\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"options\">\r\n        {\r\n         options_list.map((element, index)=>{\r\n             return <div key={index} onClick={(e)=>{\r\n                 let new_note_element = {};\r\n                 new_note_element.type = index;\r\n                 new_note_element.id = v4();\r\n                 if(new_note_data.length === 0){\r\n                    new_note_element.index = 0;\r\n                 }\r\n                 else{\r\n                    new_note_element.index = new_note_data[new_note_data.length - 1].index + 1;\r\n                 }\r\n                 new_note_element.data = {};\r\n                 if(new_note_element.type === 3){\r\n                     //type is calendar\r\n                         let date = new_note_data[0].date_created.split(' ');\r\n                         new_note_element.data = {\r\n                         year : Number(date[2]),\r\n                         month : getIndexOfMonth(date[0]),\r\n                         day : Number(date[1]),\r\n                         hours: 9,\r\n                         minutes: 30\r\n                     }\r\n                 }\r\n                 let new_stack = new_note_stack;\r\n                 new_stack.unshift(new_note_data);\r\n                 set_new_note_stack(new_stack);\r\n                 set_new_note_data([...new_note_data, new_note_element]);\r\n                 set_change_type(!change_type);\r\n\r\n             }}>\r\n                 <span></span>\r\n                 <span>{options_values[index]}</span>\r\n             </div>\r\n         })\r\n        }\r\n        {props.children}\r\n     </div>\r\n    )\r\n}\r\n\r\nfunction NewNote(props){\r\n    return(\r\n        <div className=\"input-container\">\r\n        <InputContainer data={[{type:-1,noteId:v4(),date_created:(new Date()).toDateString().substr(4)},{type:7,data:{},id:v4(), index:0}]}>\r\n            <OptionsChoice>\r\n                <ButtonAddNote/>\r\n            </OptionsChoice>\r\n            <EditOptions/>\r\n        </InputContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {InputContainer, NewNote, OptionsChoice, NewNoteContext, NewNoteStackContext};","import React, {useContext} from 'react';\r\nimport {UserContext} from './Contexts';\r\nexport default function QuickPeek(props){\r\n    let user_data = useContext(UserContext)[0];\r\n    return (\r\n        <div className=\"quick-peek\">\r\n            <h1><i>Hey</i> {user_data.username},</h1>\r\n            <p>Welcome to Take <i>Notes</i>, The Modern Note Taking App</p>\r\n            <ul>\r\n                <h4>Key Features</h4>\r\n                <li>\r\n                    <span>Note Contexts</span>\r\n                    <p>Create Note Contexts, with variety of field types each with a different kind of information.</p>\r\n                </li>\r\n                <li>\r\n                    <span>Healthy Note Making</span>\r\n                    <p>Learn and Adapt to a healthy note-making practice, by segregating information into useful categories.</p>\r\n                </li>\r\n                <li>\r\n                    <span>Fast And Safe</span>\r\n                    <p>Don't worry on space, focus on usefulness. The data is stored on your machine, so loading time is almost 0 while viewing notes.</p>\r\n                </li>\r\n                <li>\r\n                    <span>Easy To Use</span>\r\n                    <p>Easy, clutterless UI lets you focus on the notes, use UNDO button to restore note sections. Notes are easy to Delete, Edit and Share.</p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, {useContext, useRef} from 'react';\r\nimport {InputContainer , OptionsChoice, NewNoteContext, NewNoteStackContext} from './New_Note';\r\nimport {UserContext, EditNoteContext, EditNoteDataContext, NoteDataContext, AlertContext} from './Contexts'\r\nimport {EditNoteWithId, getNoteDataFromEditData} from '../utilities/LocalStorage';\r\nimport {v4} from 'uuid';\r\n\r\nfunction EditNote(){\r\n    let edit_note_bg_ref = useRef(null);\r\n    let edit_note_data = useContext(EditNoteDataContext)[0];\r\n    let edit_active = useContext(EditNoteContext)[0];\r\n    return(\r\n        <div className=\"edit-note-bg\" visible={edit_active} ref={edit_note_bg_ref}>\r\n            <div className=\"edit-note-container\">\r\n                <InputContainer data={edit_note_data}>\r\n                    <OptionsChoice>\r\n                        <EditButton/>\r\n                    </OptionsChoice>\r\n                    <EditOptions/>\r\n                </InputContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction EditButton(props){\r\n    let new_note_data = useContext(NewNoteContext)[0];\r\n    let [note_data, set_note_data] = useContext(NoteDataContext);\r\n    let set_edit_note_data = useContext(EditNoteDataContext)[1];\r\n    let set_edit_note_active = useContext(EditNoteContext)[1];\r\n    let set_new_note_stack = useContext(NewNoteStackContext)[1];\r\n    let user_data = useContext(UserContext)[0];\r\n    let set_alert = useContext(AlertContext)[1];\r\n    return(\r\n        <div onClick={()=>{\r\n            EditNoteWithId(new_note_data, user_data['username']);\r\n            set_note_data(note_data.map((element)=>{\r\n                if(element.id === new_note_data[0].noteId){\r\n                    return getNoteDataFromEditData(new_note_data);\r\n                }\r\n                return element;\r\n            }))\r\n            set_edit_note_active(0);\r\n            set_new_note_stack([]);\r\n            set_edit_note_data([{type:-1,noteId:v4(),title:'',date_created:(new Date()).toDateString().substr(4)}]);\r\n            set_alert([2,'Note Edited Succesfully']);\r\n        }}>\r\n\r\n            <span></span>\r\n            <span>Save Note</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction EditOptions(){\r\n    let set_edit_note_active = useContext(EditNoteContext)[1];\r\n    let set_edit_note = useContext(EditNoteDataContext)[1];\r\n    let set_new_note_data = useContext(NewNoteContext)[1];\r\n    let [new_note_stack, set_new_note_stack] = useContext(NewNoteStackContext);\r\n    return(\r\n        <div className=\"edit-options\">\r\n            <span onClick={()=>{\r\n              let note_stack = new_note_stack;\r\n              if(note_stack.length > 0){\r\n                  set_new_note_stack(note_stack);\r\n                  set_new_note_data(note_stack.shift())\r\n                  }\r\n            }}></span>\r\n            <span onClick={()=>{\r\n                set_edit_note_active(0);\r\n                set_new_note_stack([]);\r\n                set_edit_note([{type:-1,noteId:v4(),title:'',date_created:(new Date()).toDateString().substr(4)}]);\r\n            }}></span>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default EditNote;","function isFoundInArray(target_element, list){\r\n  return (list.filter((element)=>\r\n  {\r\n    return element === target_element;\r\n  }\r\n  )).length > 0;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass MasonryObject{\r\n\r\n    constructor(options){\r\n      this.main_className = options.main_className;\r\n      this.size = options.size;\r\n      this.element_base_height = options.element_base_height;\r\n      this.element_base_span = options.element_base_span;\r\n      this.main_array = [];\r\n      this.parent_className = options.parent_className;\r\n      for(let i = 0;i<options.count;i++){\r\n        this.main_array.push([i]);\r\n      }\r\n    }\r\n\r\n    changeSizeAndMainArray(new_size){\r\n        let elements_list = document.querySelectorAll(`div.${this.main_className}`)\r\n\r\n      //-------------testing code ----------------\r\n        if(elements_list.length > this.main_array.length){\r\n          this.main_array.unshift([0]);\r\n          this.main_array = this.main_array.map((element, index)=>{\r\n            if(index === 0){\r\n              return element;\r\n            }\r\n            else{\r\n              return element.map((c_element)=>c_element+1);\r\n            }\r\n          })\r\n        }\r\n      //testing code ends here --------------------\r\n\r\n\r\n\r\n        this.size = new_size;\r\n        let press_array = [];\r\n        let first_indices_array = [];\r\n        let height_array = [];\r\n        for(let i = 0;i<elements_list.length;i++){\r\n          if(i === 0){\r\n\r\n              this.main_array[i] = this.main_array[i].map((_,index)=>{return this.main_array[i][0] + index * new_size});\r\n              press_array.push(...this.main_array[i]);\r\n              first_indices_array.push(this.main_array[i][0]);\r\n          }\r\n\r\n          else{\r\n              let j = 1;\r\n              while(true){\r\n                  if(!isFoundInArray(this.main_array[i-1][0] + j, press_array)){\r\n                    this.main_array[i][0] = this.main_array[i-1][0] + j;\r\n                    this.main_array[i] = this.main_array[i].map((_,index)=>{return this.main_array[i][0] + index * new_size});\r\n                    press_array.push(...this.main_array[i]);\r\n                    break;\r\n                  }\r\n                  else {\r\n                      j++;\r\n                  }\r\n              }\r\n\r\n              first_indices_array.push(this.main_array[i][0]);\r\n          }\r\n\r\n        let height_stack_above = 0;\r\n        for(let j = this.main_array[i][0] - this.size;j >= 0;j-=this.size){\r\n          if(isFoundInArray(j, first_indices_array)){\r\n            let index = first_indices_array.indexOf(j);\r\n            height_stack_above = height_stack_above + elements_list[index].offsetHeight + 70;\r\n          }\r\n        }\r\n        height_array.push(height_stack_above + elements_list[i].offsetHeight);\r\n        elements_list[i].style.transform = `translate(${(this.main_array[i][0] % this.size) * this.element_base_span}px, ${height_stack_above}px)`\r\n        }\r\n        let max_height = (height_array.sort((a,b)=>b-a))[0];\r\n        let parent = (document.querySelector(`div.${this.parent_className}`));\r\n\r\n        parent.style.height = `${max_height + 50}px`\r\n\r\n    }\r\n\r\n\r\n    SetLayout(pressed_index, toggle_type){\r\n      let elements_list = document.querySelectorAll(`div.${this.main_className}`);\r\n      elements_list[pressed_index].children[0].style.height = `initial`;\r\n      let press_array = [];\r\n      let first_indices_array = [];\r\n      let height_array = [];\r\n\r\n      //loop to check and set positions of squares\r\n      for(let i = 0;i<elements_list.length;i++){\r\n\r\n  //index less than the currently clicked index ------------------------------------------------\r\n  //elements are just added\r\n        if(i < pressed_index){\r\n          press_array.push(...this.main_array[i]); //store the used indices\r\n          first_indices_array.push(this.main_array[i][0]);\r\n        }\r\n\r\n  //index greater than the currently clicked index ------------------------------------------------\r\n  //index checked with the previous index and appropriate position set up -------------------------------\r\n        else if(i > pressed_index){\r\n          let j = 1;\r\n            while(true){\r\n                if(!isFoundInArray(this.main_array[i-1][0] + j , press_array)){\r\n                    this.main_array[i][0] = this.main_array[i-1][0] + j;\r\n                    this.main_array[i] = this.main_array[i].map((_,index)=>{return this.main_array[i][0] + index * this.size})\r\n                    press_array.push(...this.main_array[i]);\r\n                    first_indices_array.push(this.main_array[i][0]);\r\n                    break;\r\n                }\r\n                else{\r\n                    j++;\r\n                }\r\n            }\r\n        }\r\n  //index equal to pressed index\r\n  //generate occupied indices based on new height or remove entirely if size reduced.\r\n\r\n        else if(i === pressed_index){\r\n          if(toggle_type === true){\r\n            let n = 1;\r\n            while(n < Math.ceil(elements_list[i].offsetHeight / 420)){\r\n              this.main_array[i].push( this.main_array[i][0] + this.size * n);\r\n              press_array.push(this.main_array[i][0] + this.size * n);\r\n              n++;\r\n            }\r\n\r\n              first_indices_array.push(this.main_array[i][0]);\r\n          }\r\n\r\n          else{\r\n            this.main_array[i] = [this.main_array[i][0]];\r\n            press_array.push(i);\r\n            first_indices_array.push(this.main_array[i][0]);\r\n          }\r\n        }\r\n\r\n\r\n        //changing elements position accordingly\r\n        let height_stack_above = 0;\r\n        for(let j = this.main_array[i][0] - this.size;j >= 0;j-=this.size){\r\n          if(isFoundInArray(j, first_indices_array)){\r\n            let index = first_indices_array.indexOf(j);\r\n            height_stack_above = height_stack_above + elements_list[index].offsetHeight + 70;\r\n          }\r\n        }\r\n        height_array.push(height_stack_above + elements_list[i].offsetHeight);\r\n        elements_list[i].style.transform = `translate(${(this.main_array[i][0] % this.size) * this.element_base_span}px, ${height_stack_above}px)`\r\n\r\n      }\r\n      let max_height = (height_array.sort((a,b)=>b-a))[0];\r\n      let parent = (document.querySelector(`div.${this.parent_className}`));\r\n\r\n      parent.style.height = `${max_height + 50}px`\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  export default MasonryObject;","import React, {useState, useRef, useEffect, useContext} from 'react';\r\nimport {UserContext, NoteDataContext, EditNoteDataContext, EditNoteContext, AlertContext } from './Contexts';\r\nimport {convertNoteDatatoEditData, DeleteNoteWithId, EditNoteWithId} from '../utilities/LocalStorage';\r\nimport MasonryObject from '../utilities/masonry';\r\n\r\n//create sample note data to test out functionality\r\n\r\nfunction NoteHeading(props){\r\n    return (<h3 className=\"note-drawer-heading\">Notes At A Glance</h3>)\r\n}\r\nfunction NoteTransactionBlock(props){\r\n    if(!props.data_array.length){\r\n        return null;\r\n    }\r\n    return(\r\n        <div className=\"transaction note-sub-block\">\r\n            <span>Transaction</span>\r\n            <div className=\"working-grid\" style={{gridTemplateColumns:`repeat(${props.data_array.length}, 100%)`}}>\r\n            {props.data_array.map((element, index)=>{\r\n                return <div type={element.data.transaction_type} key={index}>\r\n                    <span>{element.data.transaction_end}</span>\r\n                    <span>{element.data.transaction_type ? '-' : '+'} Rs {element.data.transaction_amt}</span>\r\n                </div>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nfunction NoteTextBlock(props){\r\n    if(!props.data_array.length){\r\n        return null;\r\n    }\r\n    return(\r\n        <div className=\"note-sub-block text\">\r\n            <span>Text</span>\r\n            <div className=\"working-grid\" style={{gridTemplateColumns:`repeat(${props.data_array.length}, 100%)`}}>\r\n                {\r\n                    props.data_array.map((element, index)=>{\r\n                        return <p key={index}>{element.data.text}</p>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nfunction NoteContactBlock(props){\r\n    if(!props.data_array.length){\r\n        return null;\r\n    }\r\n    return(\r\n        <div className=\"contact note-sub-block\">\r\n            <span>Contact</span>\r\n            <div className=\"working-grid\" style={{gridTemplateColumns:`repeat(${props.data_array.length}, 100%)`}}>\r\n            {props.data_array.map((element, index)=>{\r\n                return (<div key={index}>\r\n                            <div>\r\n                                <span></span>\r\n                                <span>{element.data.title}</span>\r\n                                <span>{element.data.contact_value}</span>\r\n                            </div>\r\n                        </div>\r\n                );\r\n            })}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nfunction NoteLinkBlock(props){\r\n\r\n    if(!props.data_array.length){\r\n        return null;\r\n    }\r\n\r\n    return(\r\n        <div className=\"note-sub-block link\">\r\n            <span>Link</span>\r\n            <div className=\"working-grid\" style={{gridTemplateColumns : `repeat(${props.data_array.length}, 100%)`, gridGap:'0px 2em'}}>\r\n            {props.data_array.map((element, index)=>{\r\n                return(\r\n                    <div key={index}>\r\n                        <span></span>\r\n                        <span>{element.data.title}</span>\r\n                        <span>{element.data.link_address.length > 30 ? `${element.data.link_address.substr(0,30)}...` : element.data.link_address}</span>\r\n                    </div>\r\n                );\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction NoteLocationBlock(props){\r\n    if(!props.data_array.length){\r\n        return null;\r\n    }\r\n    return(\r\n        <div className=\"note-sub-block location\">\r\n            <span>Location</span>\r\n            <div className=\"working-grid\" style={{gridGap:'0px 2em', gridTemplateColumns:`repeat(${props.data_array.length}, 100%)`}}>\r\n            {props.data_array.map((element, index)=>{\r\n                return(\r\n                    <div key={index}>\r\n                    <span></span>\r\n                    <div>\r\n                        <span>{element.data.title}</span>\r\n                        <p>{element.data.location_address}</p>\r\n                    </div>\r\n                    </div>\r\n                )\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction NoteListBlock(props){\r\n    let [note_data, set_note_data] = useContext(NoteDataContext);\r\n    let user = useContext(UserContext)[0];\r\n    if(!props.data_array.length){\r\n        return null;\r\n    }\r\n    return(\r\n        <div className=\"note-sub-block list\">\r\n            <span>{props.is_checked ? 'CheckList':'List'}</span>\r\n            <div className=\"working-grid\" style={{gridTemplateColumns:`repeat(${props.data_array.length}, 100%)`}}>\r\n            {props.data_array.map((element, index)=>{\r\n                return <ul key={index} is_checked={props.is_checked} >\r\n                            <span>{element.data.title}</span>\r\n                    {element.data.list_items.map((element,c_index)=>{\r\n                        return (<li key={c_index} check={element.checked} onClick={()=>{\r\n                            if(props.is_checked === 0){\r\n                                return;\r\n                            }\r\n                            let list_block_id = props.data_array[index].id;\r\n                            let note_index = props.index;\r\n                            set_note_data(note_data.map((element, d_index)=>{\r\n                                if(d_index === note_index){\r\n                                     element.checklists.map((list_block)=>{\r\n                                        if(list_block.id === list_block_id){\r\n                                            list_block.data.list_items[c_index].checked = (Number(list_block.data.list_items[c_index].checked) + 1)%2;\r\n                                        }\r\n                                        return list_block;\r\n                                    })\r\n                                }\r\n                                    return element;\r\n                            }))\r\n                            EditNoteWithId(convertNoteDatatoEditData(note_data[props.index]), user.username);\r\n                        }}>\r\n                                    <i></i><span>{element.item}</span>\r\n                               </li>);\r\n                    })}\r\n                </ul>\r\n            })}\r\n        </div></div>\r\n    );\r\n}\r\n\r\nfunction NoteImageBlock(props){\r\n    if(!props.data_array.length){\r\n        return null;\r\n    }\r\n    return(\r\n        <div className=\"note-sub-block image\">\r\n            <span>Image</span>\r\n            <div className=\"working-grid\" style={{gridTemplateColumns:`repeat(${props.data_array.length}, 100%)`}}>\r\n            {\r\n                props.data_array.map((element,index)=>{\r\n                    return(\r\n                        <div key={index}>\r\n                            <img src={element.data.image_url} alt=\"could not load\"/>\r\n                            <p>{element.data.image_caption}</p>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction NoteEventBlock(props){\r\n\r\n    if(!props.data_array.length){\r\n        return null;\r\n    }\r\n    return(\r\n        <div className=\"note-sub-block event\">\r\n            <span>Events</span>\r\n            <div className=\"working-grid\" style={{gridTemplateColumns:`repeat(${props.data_array.length}, 100%)`}}>\r\n            {props.data_array.map((element, index)=>{\r\n                return(<div key={index}>\r\n                    <span>{element.data.title.split(' ').map((element, index)=>{\r\n                        return <b key={index}>{element} </b>\r\n                    })}</span>\r\n                    <span><small>on</small> {new Date(element.data.year, element.data.month - 1, element.data.day).toDateString()} <small>at</small> {element.data.hours}:{element.data.minutes} HRS</span>\r\n                </div>)\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TitleBlock(props){\r\n    let [note_data, set_note_data] = useContext(NoteDataContext);\r\n    let user_data = useContext(UserContext)[0].username;\r\n    let set_alert = useContext(AlertContext)[1];\r\n    let set_edit_note_data = useContext(EditNoteDataContext)[1];\r\n    let set_edit_note_active = useContext(EditNoteContext)[1];\r\n    return(\r\n        <div className=\"title-block\">\r\n            <h2>{props.title}</h2>\r\n            <div className=\"btn-group\">\r\n                <span onClick={(e)=>{\r\n                    e.target.parentNode.parentNode.parentNode.parentNode.style.transform +=' scale(0)';\r\n                    setTimeout(()=>{\r\n                        set_note_data(note_data.filter((element, index)=>{\r\n                            return element.id !== note_data[props.index].id;\r\n                        }));\r\n                        DeleteNoteWithId(note_data[props.index].id, user_data);\r\n                        set_alert([3,'Note Deleted Succesfully']);\r\n                    },400)\r\n                }}></span> {/*this is the delete button*/}\r\n                <span onClick={()=>set_alert([3,'Coming Soon...'])}></span> {/*this is the share button*/}\r\n                <span onClick={()=>{\r\n                    set_edit_note_data([...convertNoteDatatoEditData(note_data[props.index])]);\r\n                    set_edit_note_active(1);\r\n                }}></span> {/*this is the edit button*/}\r\n            </div>\r\n            <span>Added on {props.date_created}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction NoteBlock(props){\r\n    return(\r\n        <div className=\"note-block\">\r\n            <TitleBlock index={props.index} title={props.title} date_created={props.date_created}/>\r\n            <NoteTextBlock data_array={props.texts}/>\r\n            <NoteContactBlock data_array={props.contacts}/>\r\n            <NoteTransactionBlock data_array={props.transactions}/>\r\n            <NoteListBlock data_array={props.checklists} is_checked={1} id={props.id} index={props.index}/>\r\n            <NoteListBlock data_array={props.lists} is_checked={0} id={props.id} index={props.index}/>\r\n            <NoteImageBlock data_array={props.images}/>\r\n            <NoteLinkBlock data_array={props.links}/>\r\n            <NoteEventBlock data_array={props.events}/>\r\n            <NoteLocationBlock data_array={props.locations}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet ResizeContext = React.createContext();\r\n\r\nfunction NoteCollection(props){\r\n\r\n    let note_data = useContext(NoteDataContext)[0];\r\n    let [resize_event, set_resize_event] = useState(0);\r\n    let collection_ref = useRef(null);\r\n    let size_ref = useRef(window.innerWidth > 1270 ? 3 : (window.innerWidth < 700) ? 1 : 2);\r\n    let masonry_object = useRef(new MasonryObject({\r\n        main_className : 'note-block-collapse-btn-wrapper',\r\n        parent_className:'note-collection',\r\n        size:size_ref.current,\r\n        count:note_data.length,\r\n        element_base_height:500,\r\n        element_base_span:440\r\n    }));\r\n    useEffect(()=>{\r\n        if(window.innerWidth < 800){\r\n            masonry_object.current.changeSizeAndMainArray(1);\r\n            collection_ref.current.style.marginLeft = `calc(50% - 220px)`;\r\n        }\r\n        else if(window.innerWidth < 1270){\r\n            masonry_object.current.changeSizeAndMainArray(2);\r\n            collection_ref.current.style.marginLeft = `calc(50% - 440px)`;\r\n        }\r\n        else if(window.innerWidth > 1270){\r\n            masonry_object.current.changeSizeAndMainArray(3);\r\n            collection_ref.current.style.marginLeft = `calc(50% - 660px)`;\r\n        }\r\n    },[note_data])\r\n    let timeoutIntervalId = -1;\r\n    window.onresize = (()=>{\r\n        clearTimeout(timeoutIntervalId);\r\n        timeoutIntervalId = setTimeout(()=>{\r\n\r\n            if(window.innerWidth < 800){\r\n                masonry_object.current.changeSizeAndMainArray(1);\r\n                collection_ref.current.style.marginLeft = `calc(50% - 220px)`;\r\n            }\r\n            else if(window.innerWidth < 1270){\r\n                masonry_object.current.changeSizeAndMainArray(2);\r\n                collection_ref.current.style.marginLeft = `calc(50% - 440px)`;\r\n            }\r\n            else if(window.innerWidth > 1270){\r\n                masonry_object.current.changeSizeAndMainArray(3);\r\n                collection_ref.current.style.marginLeft = `calc(50% - 660px)`;\r\n            }\r\n        })\r\n    })\r\n\r\n    return (<div className=\"note-collection\" ref={collection_ref}>\r\n    <ResizeContext.Provider value={[resize_event, set_resize_event]}>\r\n    {\r\n        note_data.map((element, index)=>{\r\n            return (\r\n            <div className=\"note-block-collapse-btn-wrapper\" key={element.id}> {/*style={{transform:`translate(${(index % size_ref.current) * 420}px, ${Math.floor(index / size_ref.current) * 450}px)`}} */}\r\n                <NoteBlock\r\n                index={index}\r\n                id={element.id}\r\n                title={element.title || 'Note Title Here'}\r\n                date_created={element.date_created}\r\n                texts={element.texts || []}\r\n                events={element.events || []}\r\n                images={element.images || []}\r\n                locations={element.locations || []}\r\n                transactions={element.transactions || []}\r\n                checklists={element.checklists || []}\r\n                lists={element.lists || []}\r\n                links={element.links || []}\r\n                contacts={element.contacts || []}\r\n                />\r\n                <span onClick={(e)=>{\r\n                    e.target.parentNode.classList.toggle('expand');\r\n                    masonry_object.current.SetLayout(index, e.target.parentNode.classList.contains('expand'));\r\n                }}>Toggle View</span>\r\n        </div>\r\n            )\r\n        })\r\n    }\r\n    </ResizeContext.Provider>\r\n    </div>);\r\n}\r\n//all note-blocks based on the different possible categories\r\n\r\n\r\n\r\nfunction NotesBoard(props){\r\n    return(\r\n        <React.Fragment>\r\n            <NoteHeading/>\r\n            <NoteCollection/>\r\n       </React.Fragment>\r\n    );\r\n}\r\nexport default NotesBoard;","import React from 'react';\r\nfunction Header(props){\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"logo\"></div>\r\n            <span>Take <i>Notes</i></span>\r\n        </div>\r\n    );\r\n}\r\nexport default Header;","import React, {useState, useContext} from 'react';\r\nimport {AlertContext} from './Contexts';\r\n\r\nfunction SearchBarCategory(props){\r\n    let categories = ['Date Created', 'Only Images', 'Content Size'];\r\n    let [current_category, set_category] = useState(0);\r\n    return(\r\n        <div className=\"search-category\">\r\n            <span>Sort By</span>\r\n            <span onClick={(e)=>{\r\n                set_category((current_category + 1) % 3);\r\n            }}>{categories[current_category]}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction SearchBar(props){\r\n    let set_alert = useContext(AlertContext)[1];\r\n    return(\r\n        <div className=\"search-bar-wrapper\">\r\n            <h1>Your Past <i>Notes</i></h1>\r\n            <div className=\"search-bar\">\r\n                <input type=\"text\" placeholder=\"Type in to Search ...\"/>\r\n                <span onClick={()=>set_alert([1,'Not Implemented Yet'])}></span>\r\n            </div>\r\n            <SearchBarCategory/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default SearchBar;","import React , {useState, useRef, useContext, useEffect} from 'react';\nimport './App.css';\nimport {NewNote} from './components/New_Note';\nimport QuickPeek from './components/QuickPeek';\nimport EditNote from './components/EditNote';\nimport NotesBoard from './components/NotesBoard';\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar';\nimport {addUser, returnUserList, getUserId, AddFromSession, AddToSession, returnNotesList} from './utilities/LocalStorage';\nimport { v4 } from 'uuid';\n\nimport {AlertContext, UserContext, EditNoteContext, EditNoteDataContext, NoteDataContext} from './components/Contexts';\n\nfunction UserWrapper(props){\n  let [user_data, set_user_data] = useState({username:'',userId:'',logged_in:false});\n  let user_list = useState(returnUserList())[0];\n  let [note_data, set_note_data] = useState(returnNotesList(user_data.username) || []);\n  useEffect(()=>{\n    if(user_data.username !== ''){\n      addUser(user_data);\n      AddToSession(user_data);\n    }\n  }, [user_data])\n  return(\n    <UserContext.Provider value={[user_data, set_user_data]}>\n      <NoteDataContext.Provider value={[note_data, set_note_data]}>\n          <LoginWindow user_list={user_list} visible={Number(user_data.logged_in)}/>\n            <MainPage logged_in={Number(user_data.logged_in)}>\n                {props.children}\n            </MainPage>\n     </NoteDataContext.Provider>\n    </UserContext.Provider>\n  );\n}\n\nfunction MainPage(props){\n  return <div className=\"main\">\n    {props.logged_in ? props.children : null}\n  </div>\n}\n\nfunction AppWrapper(props){\n  let [alert, set_alert] = useState([0,'Are you sure you want to delete ??']); // format ['alert type', 'alert text']\n  let [visible, set_visible] = useState(0);\n  let [edit_note_data, set_edit_note_data] = useState([]);\n  return <AlertContext.Provider value={[alert, set_alert]}>\n        <EditNoteDataContext.Provider value={[edit_note_data, set_edit_note_data]}>\n          <EditNoteContext.Provider value={[visible, set_visible]}>\n            {props.children}\n          </EditNoteContext.Provider>\n        </EditNoteDataContext.Provider>\n  </AlertContext.Provider>\n}\n\nfunction AlertWindow(props){\n  let [alert,set_alert] = useContext(AlertContext);\n  return(\n    <div className=\"alert-window\" type={alert[0]}>\n      <div className=\"alert-box\">\n        <span>{alert[1]}</span>\n        <span className=\"close\" onClick={()=>{\n          set_alert([0,'no-alert']);\n        }}></span>\n      </div>\n    </div>\n  )\n\n}\n\nfunction LoginWindow(props){\n  let set_user_data = useContext(UserContext)[1];\n  let input_ref = useRef(null);\n  let [status, set_status] = useState(0);\n  useEffect(()=>{\n    let session_user = AddFromSession();\n    if(session_user !== null){\n      set_user_data(JSON.parse(session_user));\n      console.log(JSON.parse(session_user));\n    }\n  },[set_user_data])\n  if(props.visible){\n    return null;\n  }\n  return(\n    <div className=\"login-window\">\n      <span className=\"login-error\" visible={status}>Please enter a valid name to continue.</span>\n      <div className=\"main-logo\"></div>\n      <h1>Take <i>Notes</i></h1>\n      <input type=\"text\" ref={input_ref} placeholder={\"Enter A Name\"}/>\n      <button onClick={(e)=>{\n        if(input_ref.current.value === ''){\n          set_status(1);\n          setTimeout(()=>set_status(0),3000);\n        }\n        else{\n          set_user_data({username:input_ref.current.value, userId:v4(), logged_in:true});\n        }\n\n      }}>Start Taking Notes <i></i></button>\n      {props.user_list.length > 0 ? (<h3 className=\"note-drawer-heading\" style={{marginTop:'4em', marginBottom:'0px'}}>Previous Logins</h3>) : null}\n      <ul className=\"user-list-past\">\n      {props.user_list.map((element, index)=>{\n        return <li key={index} onClick={()=>{\n          set_user_data({username:element,userId:getUserId(element),logged_in:true});\n        }}>{element}</li>\n      })}\n      </ul>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <UserWrapper>\n      <AppWrapper>\n        <Header/>\n        <AlertWindow/>\n        <div className=\"first-view\">\n            <QuickPeek/>\n            <div className=\"right\">\n              <h1>Create A New Note <i></i></h1>\n              <NewNote/>\n            </div>\n        </div>\n        <SearchBar/>\n        <NotesBoard/>\n        <EditNote/>\n      </AppWrapper>\n    </UserWrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}