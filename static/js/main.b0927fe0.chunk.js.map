{"version":3,"sources":["utilities/LocalStorage.js","images/image_default.png","components/Contexts.js","components/New_Note.js","components/EditNote.js","utilities/masonry.js","components/NotesBoard.js","components/Header.js","components/SearchBar.js","App.js","index.js"],"names":["getNoteDataFromEditData","edit_note_data","note_id","noteId","note_date","date_created","note_title","title","note_data","slice","locations","links","images","transactions","texts","events","lists","checklists","contacts","j","length","type","push","id","data","console","log","AlertContext","React","createContext","UserContext","EditNoteContext","NoteDataContext","EditNoteDataContext","isFoundInArray","target","array","filter","element","index","WideInput","props","useContext","NewNoteContext","new_note_data","set_new_note_data","className","placeholder","field_name","value","onChange","e","new_note_new_data","map","id_value","WiderInput","TextArea","textarea_ref","useRef","useEffect","current","innerText","ref","contentEditable","onBlur","add_url_to_context","ImageInput","useState","default_image","image","set_image","set_alert","input_ref","error_status","set_error_status","file_input_ref","SetImage","new_link","fetch","mode","then","image_obtained","blob","final_url","catch","field","image_url","onClick","style","opacity","src","alt","file","files","URL","createObjectURL","name","NoteSegment","NewNoteStackContext","new_note_stack","set_new_note_stack","icon","label","past_note_stack","new_note_data_deleted","unshift","children","get_max_days","month","year","generate_days_array","date_array","days_array","starting_index","Date","getDay","i","CalendarInput","days","set_days","changeYear","factor","changeMonth","day","months","valid_date","chosen","new_day","TimeInput","change_value","time_string","max_value","Number","TransactionInput","set_transaction_type","new_number","transaction_type","select","CheckListInput","ul_ref","Fragment","check_toggle","check_list_toggle","list_items","check","checked","item","c_element","v4","TextAreaInput","tabIndex","NoteTitle","note_title_ref","EditOptions","note_stack","shift","toDateString","substr","ChangeTypeContext","InputContainer","change_type","set_change_type","main_container","scrollIntoView","Provider","ButtonAddNote","set_note_data","user_data","user","new_note_array","JSON","parse","localStorage","getItem","username","json_final_user_data","stringify","setItem","addNote","OptionsChoice","options_values","getIndexOfMonth","month_string","new_note_element","date","split","hours","minutes","new_stack","New_Note","EditButton","set_edit_note_data","set_edit_note_active","existing_note_data","final_note","notes","EditNoteWithId","set_edit_note","EditNote","edit_note_bg_ref","edit_active","visible","target_element","list","MasonryObject","options","this","main_className","size","element_base_height","element_base_span","main_array","parent_className","count","new_size","elements_list","document","querySelectorAll","press_array","first_indices_array","height_array","_","height_stack_above","indexOf","offsetHeight","transform","max_height","sort","a","b","querySelector","height","pressed_index","toggle_type","n","Math","ceil","NoteHeading","NoteTransactionBlock","data_array","gridTemplateColumns","transaction_end","transaction_amt","NoteTextBlock","text","NoteContactBlock","contact_value","NoteLinkBlock","gridGap","link_address","NoteLocationBlock","location_address","NoteListBlock","is_checked","NoteImageBlock","image_caption","NoteEventBlock","TitleBlock","parentNode","setTimeout","DeleteNoteWithId","convertNoteDatatoEditData","NoteBlock","ResizeContext","NoteCollection","resize_event","set_resize_event","collection_ref","size_ref","window","innerWidth","masonry_object","changeSizeAndMainArray","marginLeft","timeoutIntervalId","onresize","clearTimeout","classList","toggle","SetLayout","contains","NotesBoard","Header","SearchBarCategory","current_category","set_category","SearchBar","UserWrapper","userId","logged_in","set_user_data","user_list","returnUserList","note_array","raw_data","notes_total_count","notes_array","returnNotesList","sessionStorage","removeItem","AddToSession","LoginWindow","MainPage","AppWrapper","alert","set_visible","AlertWindow","status","set_status","session_user","AddFromSession","marginTop","marginBottom","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b0927fe0.chunk.js","sourcesContent":["function returnUserList(user){\r\n    let user_list = [];\r\n    for(let i in localStorage){\r\n        if(i.substr(0,4) === \"User\"){\r\n            user_list.push(i.substr(4));\r\n        }\r\n    }\r\n    return user_list;\r\n}\r\n\r\nfunction addUser(user){\r\n    if(localStorage.getItem(`User${user.username}`))\r\n    {return;}\r\n    localStorage.setItem(`User${user.username}`,JSON.stringify(user));\r\n}\r\n\r\nfunction addNote(user, note_data){\r\n    let new_note_array = JSON.parse(localStorage.getItem(`User${user.username}`));\r\n    if(new_note_array['notes']){\r\n        new_note_array['notes'].push(note_data);\r\n    }\r\n    else{\r\n        new_note_array['notes'] = [];\r\n        new_note_array['notes'].push(note_data);\r\n    }\r\n    let json_final_user_data = JSON.stringify(new_note_array);\r\n    localStorage.setItem(`User${user.username}`, json_final_user_data);\r\n}\r\n\r\nfunction getNoteDataFromEditData(edit_note_data){\r\n    let note_id = edit_note_data[0].noteId;\r\n    let note_date = edit_note_data[0].date_created;\r\n    let note_title = edit_note_data[0].title;\r\n    let note_data = edit_note_data.slice(1);\r\n    let locations = [];\r\n    let links = [];\r\n    let images = [];\r\n    let transactions = [];\r\n    let texts = [];\r\n    let events = [];\r\n    let lists = [];\r\n    let checklists = [];\r\n    let contacts = [];\r\n    for(let j=0;j<note_data.length;j++){\r\n        switch(note_data[j].type){\r\n            case 0 : contacts.push({id:note_data[j].id, data:note_data[j].data});\r\n            break;\r\n            case 1 : links.push({id:note_data[j].id, data:note_data[j].data});\r\n            break;\r\n            case 2 : images.push({id:note_data[j].id, data:note_data[j].data});\r\n            break;\r\n            case 3 : events.push({id:note_data[j].id, data:note_data[j].data});\r\n            break;\r\n            case 4 : transactions.push({id:note_data[j].id, data:note_data[j].data});\r\n            break;\r\n            case 5 : locations.push({id:note_data[j].id, data:note_data[j].data});\r\n            break;\r\n            case 6 : checklists.push({id:note_data[j].id, data:note_data[j].data});\r\n            break;\r\n            case 7 : texts.push({id:note_data[j].id, data:note_data[j].data});\r\n            break;\r\n            case 8 : lists.push({id:note_data[j].id, data:note_data[j].data});\r\n            break;\r\n            default: console.log('invalid type')\r\n        }\r\n    }\r\n    return ({id:note_id,date_created:note_date,title:note_title, locations , texts, links, events, checklists, transactions, images, contacts, lists});\r\n\r\n};\r\n\r\nfunction returnNotesList(){\r\n    let note_array = [];\r\n    for(let i in localStorage){\r\n        if(i.substr(0,4) === 'User'){\r\n            //perform suitable operations and categorize data into titles and actual data  , return both in a dictionary in the end\r\n            let raw_data = JSON.parse(localStorage.getItem(i));\r\n            //we are interested in raw_data.notes\r\n            if(!raw_data.notes){\r\n                return;\r\n            }\r\n            let notes_total_count = raw_data.notes.length;\r\n            let notes_array = raw_data['notes'];\r\n            for(let i = 0;i<notes_total_count;i++){\r\n                note_array.unshift(getNoteDataFromEditData(notes_array[i]));\r\n            }\r\n\r\n        }\r\n    }\r\n    return note_array;\r\n}\r\n\r\nfunction getUserId(username){\r\n    return JSON.parse(localStorage.getItem(`User${username}`))['userId'];\r\n}\r\n\r\nfunction AddFromSession(){\r\n    for(let i in sessionStorage){\r\n        if(i.substr(0,4) === 'User'){\r\n            //found\r\n            return sessionStorage.getItem(i);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction AddToSession(user){\r\n    for(let i in sessionStorage){\r\n        if(i.substr(0,4)==='User'){\r\n            sessionStorage.removeItem(i);\r\n        }\r\n    }\r\n        sessionStorage.setItem(`User${user.username}`, JSON.stringify(user));\r\n}\r\n\r\n\r\nfunction convertNoteDatatoEditData(note_data){\r\n// note_array.push({id:note_id,date_created:note_date,title:note_title, locations , texts, links, events, checklists, transactions, images, contacts, lists});\r\n    let data_array = [{type:-1, date_created:note_data.date_created,title:note_data.title || '', noteId:note_data.id}];\r\n    for(let i in note_data){\r\n        if(i === 'checklists'){\r\n            note_data[i].map((element)=>{\r\n                data_array.push({type:6,id:element.id,data:{list_items:element.data.list_items, title:element.data.title}});\r\n                return null;\r\n            })\r\n        }\r\n        else if(i === 'lists'){\r\n            note_data[i].map((element)=>{\r\n                data_array.push({type:8,id:element.id,data:{list_items:element.data.list_items, title:element.data.title}});\r\n                return null;\r\n            })\r\n        }\r\n        else if(i === 'texts'){\r\n            note_data[i].map((element)=>{\r\n                data_array.push({type:7,id:element.id,data:{text:element.data.text}});\r\n                return null;\r\n            })\r\n        }\r\n        else if(i === 'images'){\r\n            note_data[i].map((element)=>{\r\n                data_array.push({type:2,id:element.id,data:{image_caption:element.data.image_caption, image_url:element.data.image_url, title:element.data.title}});\r\n                return null;\r\n            })\r\n        }\r\n        else if(i === 'links'){\r\n            note_data[i].map((element)=>{\r\n                data_array.push({type:1,id:element.id,data:{title:element.data.title, link_address:element.data.link_address}});\r\n                return null;\r\n            })\r\n        }\r\n        else if(i === 'locations'){\r\n            note_data[i].map((element)=>{\r\n                data_array.push({type:5,id:element.id,data:{title:element.data.title, location_address:element.data.location_address}});\r\n                return null;\r\n            })\r\n        }\r\n        else if(i === 'events'){\r\n            note_data[i].map((element)=>{\r\n                data_array.push({type:3,id:element.id,data:{title:element.data.title , day:element.data.day, hours:element.data.hours, minutes:element.data.minutes, month:element.data.month, year:element.data.year}});\r\n                return null;\r\n            })\r\n        }\r\n        else if(i === 'contacts'){\r\n            note_data[i].map((element)=>{\r\n                data_array.push({type:0,id:element.id,data:{title:element.data.title , contact_value:element.data.contact_value}});\r\n                return null;\r\n            })\r\n        }\r\n        else if(i === 'transactions'){\r\n            note_data[i].map((element)=>{\r\n                data_array.push({type:4,id:element.id,data:{transaction_amt:element.data.transaction_amt, transaction_end:element.data.transaction_end, transaction_type:element.data.transaction_type}});\r\n                return null;\r\n            })\r\n        }\r\n    }\r\n    return data_array;\r\n}\r\n\r\nfunction EditNoteWithId(note_data, username){\r\n    let existing_note_data = JSON.parse(localStorage.getItem(`User${username}`));\r\n    let noteData = existing_note_data['notes'];\r\n\r\n    let final_note = noteData.map((element, index)=>{\r\n        if(element[0].noteId === note_data[0].noteId){\r\n            return note_data;\r\n        }\r\n        return element;\r\n    })\r\n\r\n    existing_note_data.notes = final_note;\r\n    localStorage.setItem(`User${username}`,JSON.stringify(existing_note_data));\r\n    }\r\n    //     console.log(element);\r\n\r\nfunction DeleteNoteWithId(noteId, username){\r\n    let existing_note_data = JSON.parse(localStorage.getItem(`User${username}`));\r\n    let new_note_data = existing_note_data['notes'].filter((element)=>{\r\n        return element[0].noteId !== noteId;\r\n    })\r\n\r\n    existing_note_data['notes'] = new_note_data;\r\n    localStorage.setItem(`User${username}`,JSON.stringify(existing_note_data));\r\n}\r\n\r\nexport {addNote, returnNotesList, getNoteDataFromEditData, addUser, returnUserList, getUserId, AddFromSession, AddToSession, convertNoteDatatoEditData, EditNoteWithId, DeleteNoteWithId};","export default __webpack_public_path__ + \"static/media/image_default.1b46f609.png\";","import React from 'react';\r\n\r\nlet AlertContext = React.createContext();\r\nlet UserContext = React.createContext();\r\nlet EditNoteContext = React.createContext();\r\nlet NoteDataContext = React.createContext();\r\nlet EditNoteDataContext = React.createContext();\r\n\r\nexport {AlertContext, UserContext, EditNoteContext, EditNoteDataContext, NoteDataContext};","import React, {useState, useRef, useContext, useEffect} from 'react';\r\nimport {addNote, getNoteDataFromEditData} from '../utilities/LocalStorage';\r\nimport {v4} from 'uuid';\r\n\r\nimport default_image from '../images/image_default.png';\r\nimport {AlertContext, NoteDataContext, UserContext} from './Contexts';\r\n\r\nfunction isFoundInArray(target, array){\r\n    return (array.filter((element, index)=>{\r\n        return element === target;\r\n    }).length);\r\n}\r\n\r\nfunction WideInput(props){\r\n    let [new_note_data,set_new_note_data] = useContext(NewNoteContext);\r\n    return(\r\n        <input type=\"text\" className=\"wide-input\" placeholder={props.field_name}\r\n        value={new_note_data[props.index].data[props.type] || ''}\r\n        onChange={(e)=>{\r\n            let new_note_new_data = new_note_data.map((element, index)=>{\r\n                if(element.id === props.id_value){\r\n                    element.data[props.type] = e.target.value;\r\n                }\r\n                return element;\r\n            })\r\n            set_new_note_data(new_note_new_data);\r\n        }}/>\r\n    )\r\n}\r\n\r\nfunction WiderInput(props){\r\n    let [new_note_data,set_new_note_data] = useContext(NewNoteContext);\r\n    return(\r\n        <input type=\"text\" className=\"wider-input\"\r\n        value={new_note_data[props.index].data[props.type] || ''}\r\n         placeholder={props.field_name} onChange={(e)=>{\r\n            let new_note_new_data = new_note_data.map((element, index)=>{\r\n                if(element.id === props.id_value){\r\n                    element.data[props.type] = e.target.value;\r\n                }\r\n                return element;\r\n            })\r\n            set_new_note_data(new_note_new_data)\r\n        }}\r\n       />\r\n    )\r\n}\r\n\r\n\r\nfunction TextArea(props){\r\n    let new_note_data = useContext(NewNoteContext)[0];\r\n    let textarea_ref = useRef(null);\r\n    useEffect(()=>{\r\n        textarea_ref.current.innerText = (new_note_data[props.index].data[props.type] || '');\r\n    },[new_note_data,props.index,props.type])\r\n    return(\r\n            <div className=\"textarea image\" ref={textarea_ref} contentEditable=\"true\" onBlur={(e)=>{\r\n                props.add_url_to_context('image_caption', e.target.innerText);\r\n            }}/>\r\n    );\r\n}\r\n\r\nfunction ImageInput(props){\r\n    let [image, set_image] = useState(default_image);\r\n    let [new_note_data, set_new_note_data] = useContext(NewNoteContext);\r\n    let [alert, set_alert] = useContext(AlertContext);\r\n    let input_ref = useRef(null);\r\n    let [error_status, set_error_status] = useState(0);\r\n    let file_input_ref = useRef(null);\r\n\r\n    function SetImage(){\r\n        let new_link = input_ref.current.value;\r\n        if(new_link === ''){\r\n            set_image(default_image);\r\n            return;\r\n        }\r\n        fetch(new_link, {\r\n            mode:'cors',\r\n        }).then((image_obtained)=>{\r\n            image_obtained.blob().then((final_url)=>{\r\n                set_image(new_link);\r\n                set_error_status(0);\r\n                add_url_to_context('image_url', new_link);\r\n                add_url_to_context('title', 'Image');\r\n            })\r\n        }).catch((e)=>{\r\n            console.log(e);\r\n            set_error_status(1);\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        SetImage();\r\n    },[])\r\n\r\n    function add_url_to_context(field, value){\r\n            set_new_note_data(new_note_data.map((element, index)=>{\r\n                if(element.id === props.id_value){\r\n                    element.data[field] = value;\r\n                }\r\n                return element;\r\n            }))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"image-input\">\r\n            <input type=\"text\" className=\"inline-input\" ref={input_ref} placeholder={props.field_name} value={new_note_data[props.index].data.image_url || ''} onChange={()=>{\r\n                SetImage();\r\n            }}/>\r\n            <button className=\"choose-image\" onClick={()=>{\r\n                // file_input_ref.current.click();\r\n                set_alert([1,'Currently Not Supported']);\r\n            }}></button>\r\n            <span className=\"in-error\" style={{opacity:error_status}}>Invalid File / Link</span>\r\n            <img src={image} className=\"image-preview\" alt=\"could not load\"/>\r\n            <input type=\"file\" ref={file_input_ref} onChange={(e)=>{\r\n                let file = e.target.files[0];\r\n                if(isFoundInArray(file.type, ['image/svg+xml', 'image/png', 'image/jpg', 'image/jpeg']))\r\n                {\r\n                    //file is in valid format\r\n                    set_image(URL.createObjectURL(file));\r\n                    input_ref.current.value = file.name;\r\n                    set_error_status(0);\r\n                    add_url_to_context('image_url', image);\r\n                    add_url_to_context('title', file.name);\r\n                }\r\n                else{\r\n                    set_error_status(1);\r\n                }\r\n            }}/>\r\n            <TextArea type=\"image_caption\" index={props.index} add_url_to_context={add_url_to_context}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction NoteSegment(props){\r\n    let [new_note_data, set_new_note_data] = useContext(NewNoteContext);\r\n    let [new_note_stack, set_new_note_stack] = useContext(NewNoteStackContext);\r\n    return(\r\n        <div className=\"note-segment\">\r\n            <div className=\"segment-header\">\r\n                <span icon={props.icon}></span>\r\n                <span>{props.label}</span>\r\n                <span onClick={()=>{\r\n                    let past_note_stack = new_note_stack;\r\n                    let new_note_data_deleted =  new_note_data.filter((element, index)=>{\r\n                        return element.id !== props.id_value;\r\n                    })\r\n                    past_note_stack.unshift(new_note_data);\r\n                    set_new_note_stack(past_note_stack);\r\n                    set_new_note_data(new_note_data_deleted);\r\n                }}></span>\r\n            </div>\r\n            {props.children}\r\n            <footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction get_max_days(month , year){\r\n    if(isFoundInArray(month, [1, 3, 5, 7, 8, 10, 12])){\r\n        return 31;\r\n    }\r\n    else if(isFoundInArray(month, [4, 6, 9, 11]))\r\n    {\r\n        return 30;\r\n    }\r\n    else {\r\n        if(year % 4 === 0){return 29}\r\n        else{return 28}\r\n    }\r\n}\r\n\r\n\r\nfunction generate_days_array(date_array){\r\n    let [_ , month, year] = date_array;\r\n    let new_date = new Date(year, month - 1, 1);\r\n    let days_array = [];\r\n    let j = 0;\r\n    let starting_index = new_date.getDay();\r\n    for(let i = 0; i<42; i++){\r\n        if(i >= starting_index && j < get_max_days(month, year)){\r\n            days_array.push(++j);\r\n        }\r\n        else{\r\n            days_array.push(' ');\r\n        }\r\n    }\r\n    return days_array;\r\n}\r\n\r\nfunction CalendarInput(props){\r\n    let [days, set_days] = useState(generate_days_array([1, 1, 2000]));\r\n    let [new_note_data, set_new_note_data] = useContext(NewNoteContext);\r\n\r\n    useEffect(()=>{\r\n        set_days(generate_days_array([new_note_data[props.index].data.day, new_note_data[props.index].data.month, new_note_data[props.index].data.year]))\r\n    },[new_note_data, props.index])\r\n\r\n    function changeYear(factor){\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(element.id === props.id_value){\r\n                element.data.year += factor;\r\n            }\r\n            return element;\r\n        }))\r\n        set_days(generate_days_array([1,new_note_data[props.index].data.month, new_note_data[props.index].data.year]))\r\n    }\r\n    function changeMonth(factor){\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(element.id === props.id_value){\r\n                if(factor === -1){\r\n                    if(element.data.month === 1){\r\n                        element.data.month = 12;\r\n                    }\r\n                    else{\r\n                        element.data.month += factor;\r\n                    }\r\n                }\r\n                if(factor === 1){\r\n                    if(element.data.month === 12){\r\n                        element.data.month = 1;\r\n                    }\r\n                    else{\r\n                        element.data.month += factor;\r\n                    }\r\n                }\r\n            }\r\n            return element;\r\n        }))\r\n        set_days(generate_days_array([1,new_note_data[props.index].data.month, new_note_data[props.index].data.year]))\r\n    }\r\n    function changeDay(new_day){\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(element.id === props.id_value){\r\n                element.data.day = new_day;\r\n            }\r\n            return element;\r\n        }))\r\n    }\r\n\r\n\r\n    let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep','Oct', 'Nov', 'Dec'];\r\n    return(\r\n        <div className=\"calendar\">\r\n            <div className=\"top-btn-group\">\r\n                <div>\r\n                    <span onClick={()=>{\r\n                        changeYear(1);\r\n                    }}>+</span>\r\n                    <span>{new_note_data[props.index].data.year}</span>\r\n                    <span onClick={()=>{\r\n                        changeYear(-1)\r\n                    }}>-</span>\r\n                </div>\r\n                <div>\r\n                    <span onClick={()=>{changeMonth(1)}}>+</span>\r\n                    <span>{months[new_note_data[props.index].data.month - 1]}</span>\r\n                    <span onClick={()=>{changeMonth(-1)}}>-</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"week-column\">\r\n                <span>Sun</span>\r\n                <span>Mon</span>\r\n                <span>Tue</span>\r\n                <span>Wed</span>\r\n                <span>Thu</span>\r\n                <span>Fri</span>\r\n                <span>Sat</span>\r\n            </div>\r\n            <div className=\"days\">\r\n                {days.map((element, index)=>{\r\n                    if(element !== ' '){\r\n                        if(element == new_note_data[props.index].data.day){\r\n                            return <span key={index} valid_date=\"1\" chosen=\"1\">{element}</span>\r\n                        }\r\n                        else{\r\n                            return <span key={index} valid_date=\"1\" onClick={()=>{\r\n                                changeDay(element);\r\n                            }}>{element}</span>\r\n                        }\r\n                    }\r\n                    else{\r\n                        return <span key={index} valid_date=\"0\"></span>\r\n                    }\r\n                })}\r\n            </div>\r\n            <div className=\"date-selected\">\r\n                <span>Selected Date</span>\r\n                <span>{new_note_data[props.index].data.day} {months[new_note_data[props.index].data.month - 1]} {new_note_data[props.index].data.year}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TimeInput(props){\r\n    let [new_note_data, set_new_note_data] = useContext(NewNoteContext);\r\n    function change_value(time_string , factor, max_value){\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(element.id === props.id_value){\r\n                if(factor > 0){\r\n                    if(element.data[time_string] === max_value){\r\n                        element.data[time_string] = 0;\r\n                    }\r\n                    else{\r\n                        element.data[time_string] = Number(element.data[time_string]) + 1;\r\n                    }\r\n                }\r\n                else if(factor === 0){\r\n                    if(element.data[time_string] === 0){\r\n                        element.data[time_string] = max_value;\r\n                    }\r\n                    else{\r\n                        element.data[time_string] = Number(element.data[time_string]) - 1;\r\n                    }\r\n                }\r\n            }\r\n            return element;\r\n        }))\r\n    }\r\n    return(\r\n        <div className='time-input'>\r\n            <div className=\"time-block\">\r\n                <span onClick={()=>{change_value('hours',0,23)}}>-</span>\r\n                <span>{new_note_data[props.index].data['hours']}</span>\r\n                <span onClick={()=>{change_value('hours',1,23)}}>+</span>\r\n            </div>\r\n            <div className=\"time-block\">\r\n                <span onClick={()=>{change_value('minutes',0,59)}}>-</span>\r\n                <span>{new_note_data[props.index].data['minutes']}</span>\r\n                <span onClick={()=>{change_value('minutes',1,59)}}>+</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TransactionInput(props){\r\n    let [new_note_data, set_new_note_data] = useContext(NewNoteContext);\r\n    function set_transaction_type(new_number){\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(element.id === props.id_value){\r\n                element.data.transaction_type = new_number;\r\n            }\r\n            return element;\r\n        }))\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"transaction-input\">\r\n\r\n            <div select={(new_note_data[props.index].data.transaction_type === 0 ? 1 : 0)} onClick={()=>{\r\n                set_transaction_type(0);\r\n            }}>Paid/Lent To</div>\r\n            <div select={(new_note_data[props.index].data.transaction_type === 1 ? 1 : 0)} onClick={()=>{\r\n                set_transaction_type(1);\r\n            }}>Received By</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction CheckListInput(props){\r\n    let [new_note_data, set_new_note_data] = useContext(NewNoteContext);\r\n\r\n    function add_new_item(item){\r\n\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(props.id_value === element.id){\r\n                element.data.list_items = [...element.data.list_items || [], item ];\r\n            }\r\n            return element;\r\n        }));\r\n    }\r\n    function delete_new_item(item){\r\n\r\n\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(props.id_value === element.id){\r\n                element.data.list_items = element.data.list_items.filter((c_element)=>{\r\n                    return c_element.id !== item.id;\r\n                })\r\n            }\r\n            return element;\r\n        }));\r\n\r\n    }\r\n\r\n    function check_toggle_item(item){\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(props.id_value === element.id){\r\n                element.data.list_items =  element.data.list_items.map((c_element)=>{\r\n                    if(c_element.id === item.id){\r\n                        c_element.checked=Number(!item.checked);\r\n                    }\r\n                    return c_element;\r\n                })\r\n            }\r\n            return element;\r\n        }));\r\n    }\r\n    function change_item_value(item){\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(props.id_value === element.id){\r\n                element.data.list_items =  element.data.list_items.map((c_element)=>{\r\n                    if(c_element.id === item.id){\r\n                        c_element.item=item.item;\r\n                    }\r\n                    return c_element;\r\n                })\r\n            }\r\n            return element;\r\n        }));\r\n    }\r\n\r\n\r\n    let ul_ref = useRef(null);\r\n    return(\r\n        <React.Fragment>\r\n            <ul className=\"checklist\" check_toggle={props.check_list_toggle} ref={ul_ref}>\r\n            {(new_note_data[props.index].data.list_items || []).map((element, index)=>{\r\n                return <li key={element.id} check={element.checked}>\r\n                    <span  onClick={()=>{\r\n                        check_toggle_item(element);\r\n                    }}></span>\r\n                    <input placeholder={'Enter Item Info ...'} value={element.item} type=\"text\" onChange={(e)=>{\r\n                        change_item_value({checked:element.checked,id:element.id,item:e.target.value});\r\n                    }}/>\r\n                    <span onClick={()=>{\r\n                        delete_new_item(element)\r\n                    }}></span>\r\n                </li>\r\n            })}\r\n            </ul>\r\n            <button onClick={()=>{\r\n                //add new elements\r\n                add_new_item({checked:'0',item:'',id:v4()});\r\n            }}><i></i>Add Item</button>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction TextAreaInput(props){\r\n    let [new_note_data, set_new_note_data] = useContext(NewNoteContext);\r\n    let textarea_ref = useRef(null);\r\n    useEffect(()=>{\r\n        set_new_note_data(new_note_data.map((element)=>{\r\n            if(element.id === props.id_value)\r\n            {\r\n                element.data['title'] = 'Text';\r\n            }\r\n            return element;\r\n        })\r\n    )\r\n        textarea_ref.current.innerText = new_note_data[props.index].data['text'] || '';\r\n    },[])\r\n\r\n\r\n    return(\r\n        <div className=\"input-body\" ref={textarea_ref} contentEditable=\"true\" tabIndex=\"0\" onBlur={(e)=>{\r\n            set_new_note_data(new_note_data.map((element)=>{\r\n                if(element.id === props.id_value){\r\n                    element.data['text'] = e.target.innerText;\r\n                }\r\n                return element;\r\n            }))\r\n        }}>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction NoteTitle(props){\r\n    let [new_note_data, set_new_note_data] = useContext(NewNoteContext);\r\n    let note_title_ref = useRef(null);\r\n    useEffect(()=>{\r\n        note_title_ref.current.innerText = new_note_data[0].title || '';\r\n    },[props.title , new_note_data])\r\n    return(\r\n        <div className=\"note-title\" ref={note_title_ref} onBlur={()=>{\r\n            set_new_note_data(new_note_data.map((element, index)=>{\r\n                if(element.type === -1){\r\n                    element.title = note_title_ref.current.innerText;\r\n                }\r\n                return element;\r\n            }))\r\n        }} contentEditable=\"true\"/>\r\n    )\r\n}\r\n\r\nfunction EditOptions(props){\r\n    let set_new_note_data = useContext(NewNoteContext)[1];\r\n    let [new_note_stack, set_new_note_stack] = useContext(NewNoteStackContext);\r\n    return(\r\n      <div className=\"edit-options\">\r\n          <span onClick={()=>{\r\n              let note_stack = new_note_stack;\r\n              if(note_stack.length > 0){\r\n                  set_new_note_stack(note_stack);\r\n                  set_new_note_data(note_stack.shift())\r\n                  }\r\n          }}></span>\r\n          <span onClick={()=>\r\n              {\r\n                set_new_note_data([{type:-1,noteId:v4(),date_created:(new Date()).toDateString().substr(4), title:''},{type:7,data:{},id:v4(), index:0}])\r\n              }\r\n          }></span>\r\n\r\n      </div>\r\n    )\r\n}\r\n\r\nlet NewNoteContext = React.createContext();\r\nlet NewNoteStackContext = React.createContext();\r\nlet ChangeTypeContext = React.createContext();\r\nfunction InputContainer(props){\r\n    let [new_note_data, set_new_note_data] = useState(props.data || [{type:-1,noteId:v4(),title:'',date_created:(new Date()).toDateString().substr(4)},{type:7,data:{},id:v4(), index:0}]);\r\n    let [new_note_stack , set_new_note_stack] = useState([]);\r\n    let [change_type, set_change_type] = useState(0);\r\n    let main_container = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        if(!main_container.current.children[main_container.current.children.length - 1]){\r\n            return;\r\n        }\r\n        main_container.current.children[main_container.current.children.length - 1].scrollIntoView(1);\r\n    }, [change_type])\r\n\r\n    useEffect(()=>{\r\n        set_new_note_data(props.data);\r\n    },[props.data] )\r\n\r\n    return <NewNoteContext.Provider value={[new_note_data, set_new_note_data]}>\r\n    <NewNoteStackContext.Provider value={[new_note_stack, set_new_note_stack]}>\r\n    <ChangeTypeContext.Provider value={[change_type, set_change_type]}>\r\n        <div className=\"input-container-inner\" ref={main_container}>\r\n            {new_note_data.map((element, index)=>{\r\n            switch(element.type){\r\n                    case 7: return (<NoteSegment key={element.id} label={\"Text\"} icon={\"8\"} id_value = {element.id}>\r\n                        <TextAreaInput id_value={element.id}  index={index}/>\r\n                    </NoteSegment>);\r\n                    case 0: return (<NoteSegment key={element.id} label={\"Contact\"} icon={\"0\"} id_value = {element.id}>\r\n                            <WideInput field_name={\"Name goes here ...\"}  type=\"title\" id_value={element.id} index={index} />\r\n                            <WideInput field_name={\"Contact goes here ...\"}  type=\"contact_value\" id_value={element.id} index={index}  />\r\n                        </NoteSegment>\r\n                    )\r\n                    case 5: return (<NoteSegment key={element.id} label={\"Location\"} icon={\"1\"} id_value = {element.id} >\r\n                            <WideInput field_name=\"Location Name goes here ...\"  type=\"title\" id_value={element.id} index={index}/>\r\n                            <WiderInput field_name=\"Exact Address goes here ...\" type=\"location_address\" id_value={element.id} index={index}/>\r\n                        </NoteSegment>\r\n                    )\r\n                    case 1: return ( <NoteSegment label={\"Link\"} key={element.id} icon={\"2\"} id_value = {element.id} >\r\n                        <WideInput field_name=\"Link Name goes here ...\"  type=\"title\" id_value={element.id} index={index}  />\r\n                        <WiderInput field_name=\"Link Address goes here ...\" type=\"link_address\" id_value={element.id} index={index} />\r\n                    </NoteSegment>\r\n                    )\r\n                    case 2: return (\r\n                    <NoteSegment label={\"Image\"} icon={\"3\"} key={element.id} id_value = {element.id}>\r\n                            <ImageInput field_name=\"Select Image or paste link ...\" id_value={element.id}  index={index}/>\r\n                        </NoteSegment>\r\n                    )\r\n                    case 3: return(\r\n                    <NoteSegment label={\"Event\"} icon={\"4\"} key={element.id} id_value = {element.id}>\r\n                        <WiderInput field_name=\"Event Name goes here ...\" id_value={element.id} type=\"title\" index={index}/>\r\n                        <CalendarInput id_value = {element.id} index={index} />\r\n                        <TimeInput id_value = {element.id} index={index} />\r\n                    </NoteSegment>\r\n                    )\r\n                    case 4: return(\r\n                        <NoteSegment label={\"Transaction\"} icon={\"5\"} key={element.id} id_value = {element.id}>\r\n                            <TransactionInput id_value={element.id}  index={index}/>\r\n                            <WideInput field_name=\"Name of Person / Store\"  type=\"transaction_end\" id_value={element.id}  index={index}/>\r\n                            <WideInput field_name=\"Enter the Amount ...\"  type=\"transaction_amt\" id_value={element.id}  index={index}/>\r\n                        </NoteSegment>\r\n                    )\r\n                    case 6: return(\r\n                        <NoteSegment label={\"CheckList\"} icon={\"6\"} key={element.id} id_value = {element.id}>\r\n                            <WideInput field_name=\"Enter the list title ...\"  type=\"title\" id_value={element.id}  index={index}/>\r\n                            <CheckListInput check_list_toggle = {1} id_value={element.id} index={index} />\r\n                        </NoteSegment>\r\n                    )\r\n                    case 8: return(\r\n                            <NoteSegment label={\"List\"} icon={\"7\"} key={element.id} id_value = {element.id} index={index}>\r\n                            <WideInput field_name=\"Enter the list title ...\" type=\"title\" id_value={element.id} index={index}/>\r\n                            <CheckListInput check_list_toggle = {0} id_value={element.id} index={index}/>\r\n                        </NoteSegment>\r\n                    )\r\n                    case -1: return(\r\n                        <NoteTitle title={element.title}/>\r\n                    )\r\n                    default :return (null);\r\n\r\n            }})\r\n            }</div>\r\n\r\n            {props.children}\r\n</ChangeTypeContext.Provider>\r\n</NewNoteStackContext.Provider>\r\n    </NewNoteContext.Provider>\r\n\r\n}\r\n\r\nfunction ButtonAddNote(props){\r\n    let [new_note_data , set_new_note_data] = useContext(NewNoteContext);\r\n    let [note_data, set_note_data] = useContext(NoteDataContext);\r\n    let user_data = useContext(UserContext)[0];\r\n    return(\r\n        <div onClick={()=>{\r\n                addNote(user_data, new_note_data);\r\n                set_note_data([ getNoteDataFromEditData(new_note_data),...note_data]);\r\n                set_new_note_data([{type:-1,noteId:v4(),date_created:(new Date()).toDateString().substr(4), title:''},{type:7,data:{},id:v4(), index:0}]);\r\n        }}>\r\n            <span></span>\r\n            <span>Save Note</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction OptionsChoice(props){\r\n    let [new_note_data, set_new_note_data] = useContext(NewNoteContext);\r\n    let [new_note_stack,set_new_note_stack] = useContext(NewNoteStackContext);\r\n    let [change_type, set_change_type] = useContext(ChangeTypeContext);\r\n    let options_list = [0, 1, 2, 3, 4, 5, 6, 7, 8]\r\n    let options_values = ['Add Contact','Add Link', 'Add Location', 'Add Text', 'Add Payment','Add Checklist', 'Add List','Add Image','Add Event'];\r\n    function getIndexOfMonth(month_string){\r\n        switch(month_string){\r\n            case 'Jan' : return 1;\r\n            case 'Feb' : return 2;\r\n            case 'Mar' : return 3;\r\n            case 'Apr' : return 4;\r\n            case 'May' : return 5;\r\n            case 'Jun' : return 6;\r\n            case 'Jul' : return 7;\r\n            case 'Aug' : return 8;\r\n            case 'Sep' : return 9;\r\n            case 'Oct' : return 10;\r\n            case 'Nov' : return 11;\r\n            case 'Dec' : return 12;\r\n            default:return -1;\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"options\">\r\n        {\r\n         options_list.map((element, index)=>{\r\n             return <div key={index} onClick={(e)=>{\r\n                 let new_note_element = {};\r\n                 new_note_element.type = index;\r\n                 new_note_element.id = v4();\r\n                 if(new_note_data.length === 0){\r\n                    new_note_element.index = 0;\r\n                 }\r\n                 else{\r\n                    new_note_element.index = new_note_data[new_note_data.length - 1].index + 1;\r\n                 }\r\n                 new_note_element.data = {};\r\n                 if(new_note_element.type === 3){\r\n                     //type is calendar\r\n                         let date = new_note_data[0].date_created.split(' ');\r\n                         new_note_element.data = {\r\n                         year : Number(date[2]),\r\n                         month : getIndexOfMonth(date[0]),\r\n                         day : Number(date[1]),\r\n                         hours: 9,\r\n                         minutes: 30\r\n                     }\r\n                 }\r\n                 let new_stack = new_note_stack;\r\n                 new_stack.unshift(new_note_data);\r\n                 set_new_note_stack(new_stack);\r\n                 set_new_note_data([...new_note_data, new_note_element]);\r\n                 set_change_type(!change_type);\r\n\r\n             }}>\r\n                 <span></span>\r\n                 <span>{options_values[index]}</span>\r\n             </div>\r\n         })\r\n        }\r\n        {props.children}\r\n     </div>\r\n    )\r\n}\r\n\r\nfunction New_Note(props){\r\n    return(\r\n        <div className=\"input-container\">\r\n        <InputContainer data={[{type:-1,noteId:v4(),date_created:(new Date()).toDateString().substr(4)},{type:7,data:{},id:v4(), index:0}]}>\r\n            <OptionsChoice>\r\n                <ButtonAddNote/>\r\n            </OptionsChoice>\r\n            <EditOptions/>\r\n        </InputContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {InputContainer, New_Note, OptionsChoice, NewNoteContext, NewNoteStackContext};","import React, {useContext, useRef} from 'react';\r\nimport {InputContainer , OptionsChoice, NewNoteContext, NewNoteStackContext} from './New_Note';\r\nimport {UserContext, EditNoteContext, EditNoteDataContext, NoteDataContext} from './Contexts'\r\nimport {EditNoteWithId, getNoteDataFromEditData} from '../utilities/LocalStorage';\r\nimport {v4} from 'uuid';\r\n\r\nfunction EditNote(){\r\n    let edit_note_bg_ref = useRef(null);\r\n    let edit_note_data = useContext(EditNoteDataContext)[0];\r\n    let edit_active = useContext(EditNoteContext)[0];\r\n    return(\r\n        <div className=\"edit-note-bg\" visible={edit_active} ref={edit_note_bg_ref}>\r\n            <div className=\"edit-note-container\">\r\n                <InputContainer data={edit_note_data}>\r\n                    <OptionsChoice>\r\n                        <EditButton/>\r\n                    </OptionsChoice>\r\n                    <EditOptions/>\r\n                </InputContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction EditButton(props){\r\n    let new_note_data = useContext(NewNoteContext)[0];\r\n    let [note_data, set_note_data] = useContext(NoteDataContext);\r\n    let set_edit_note_data = useContext(EditNoteDataContext)[1];\r\n    let set_edit_note_active = useContext(EditNoteContext)[1];\r\n    let set_new_note_stack = useContext(NewNoteStackContext)[1];\r\n    let user_data = useContext(UserContext)[0];\r\n    return(\r\n        <div onClick={()=>{\r\n            EditNoteWithId(new_note_data, user_data['username']);\r\n            set_note_data(note_data.map((element)=>{\r\n                if(element.id === new_note_data[0].noteId){\r\n                    return getNoteDataFromEditData(new_note_data);\r\n                }\r\n                return element;\r\n            }))\r\n            set_edit_note_active(0);\r\n            set_new_note_stack([]);\r\n            set_edit_note_data([{type:-1,noteId:v4(),title:'',date_created:(new Date()).toDateString().substr(4)}]);\r\n        }}>\r\n\r\n            <span></span>\r\n            <span>Save Note</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction EditOptions(){\r\n    let set_edit_note_active = useContext(EditNoteContext)[1];\r\n    let set_edit_note = useContext(EditNoteDataContext)[1];\r\n    let set_new_note_data = useContext(NewNoteContext)[1];\r\n    let [new_note_stack, set_new_note_stack] = useContext(NewNoteStackContext);\r\n    return(\r\n        <div className=\"edit-options\">\r\n            <span onClick={()=>{\r\n              let note_stack = new_note_stack;\r\n              if(note_stack.length > 0){\r\n                  set_new_note_stack(note_stack);\r\n                  set_new_note_data(note_stack.shift())\r\n                  }\r\n            }}></span>\r\n            <span onClick={()=>{\r\n                set_edit_note_active(0);\r\n                set_new_note_stack([]);\r\n                set_edit_note([{type:-1,noteId:v4(),title:'',date_created:(new Date()).toDateString().substr(4)}]);\r\n            }}></span>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default EditNote;","function isFoundInArray(target_element, list){\r\n  return (list.filter((element)=>\r\n  {\r\n    return element === target_element;\r\n  }\r\n  )).length > 0;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass MasonryObject{\r\n\r\n    constructor(options){\r\n      this.main_className = options.main_className;\r\n      this.size = options.size;\r\n      this.element_base_height = options.element_base_height;\r\n      this.element_base_span = options.element_base_span;\r\n      this.main_array = [];\r\n      this.parent_className = options.parent_className;\r\n      for(let i = 0;i<options.count;i++){\r\n        this.main_array.push([i]);\r\n      }\r\n    }\r\n\r\n    changeSizeAndMainArray(new_size){\r\n        let elements_list = document.querySelectorAll(`div.${this.main_className}`)\r\n\r\n      //-------------testing code ----------------\r\n        if(elements_list.length > this.main_array.length){\r\n          this.main_array.unshift([0]);\r\n          this.main_array = this.main_array.map((element, index)=>{\r\n            if(index === 0){\r\n              return element;\r\n            }\r\n            else{\r\n              return element.map((c_element)=>c_element+1);\r\n            }\r\n          })\r\n        }\r\n      //testing code ends here --------------------\r\n\r\n\r\n\r\n        this.size = new_size;\r\n        let press_array = [];\r\n        let first_indices_array = [];\r\n        let height_array = [];\r\n        for(let i = 0;i<elements_list.length;i++){\r\n          if(i === 0){\r\n\r\n              this.main_array[i] = this.main_array[i].map((_,index)=>{return this.main_array[i][0] + index * new_size});\r\n              press_array.push(...this.main_array[i]);\r\n              first_indices_array.push(this.main_array[i][0]);\r\n          }\r\n\r\n          else{\r\n              let j = 1;\r\n              while(true){\r\n                  if(!isFoundInArray(this.main_array[i-1][0] + j, press_array)){\r\n                    this.main_array[i][0] = this.main_array[i-1][0] + j;\r\n                    this.main_array[i] = this.main_array[i].map((_,index)=>{return this.main_array[i][0] + index * new_size});\r\n                    press_array.push(...this.main_array[i]);\r\n                    break;\r\n                  }\r\n                  else {\r\n                      j++;\r\n                  }\r\n              }\r\n\r\n              first_indices_array.push(this.main_array[i][0]);\r\n          }\r\n\r\n        let height_stack_above = 0;\r\n        for(let j = this.main_array[i][0] - this.size;j >= 0;j-=this.size){\r\n          if(isFoundInArray(j, first_indices_array)){\r\n            let index = first_indices_array.indexOf(j);\r\n            height_stack_above = height_stack_above + elements_list[index].offsetHeight + 50;\r\n          }\r\n        }\r\n        height_array.push(height_stack_above + elements_list[i].offsetHeight);\r\n        elements_list[i].style.transform = `translate(${(this.main_array[i][0] % this.size) * this.element_base_span}px, ${height_stack_above}px)`\r\n        }\r\n        let max_height = (height_array.sort((a,b)=>b-a))[0];\r\n        let parent = (document.querySelector(`div.${this.parent_className}`));\r\n\r\n        parent.style.height = `${max_height + 50}px`\r\n\r\n    }\r\n\r\n\r\n    SetLayout(pressed_index, toggle_type){\r\n      let elements_list = document.querySelectorAll(`div.${this.main_className}`);\r\n      elements_list[pressed_index].children[0].style.height = `initial`;\r\n      let press_array = [];\r\n      let first_indices_array = [];\r\n      let height_array = [];\r\n\r\n      //loop to check and set positions of squares\r\n      for(let i = 0;i<elements_list.length;i++){\r\n\r\n  //index less than the currently clicked index ------------------------------------------------\r\n  //elements are just added\r\n        if(i < pressed_index){\r\n          press_array.push(...this.main_array[i]); //store the used indices\r\n          first_indices_array.push(this.main_array[i][0]);\r\n        }\r\n\r\n  //index greater than the currently clicked index ------------------------------------------------\r\n  //index checked with the previous index and appropriate position set up -------------------------------\r\n        else if(i > pressed_index){\r\n          let j = 1;\r\n            while(true){\r\n                if(!isFoundInArray(this.main_array[i-1][0] + j , press_array)){\r\n                    this.main_array[i][0] = this.main_array[i-1][0] + j;\r\n                    this.main_array[i] = this.main_array[i].map((_,index)=>{return this.main_array[i][0] + index * this.size})\r\n                    press_array.push(...this.main_array[i]);\r\n                    first_indices_array.push(this.main_array[i][0]);\r\n                    break;\r\n                }\r\n                else{\r\n                    j++;\r\n                }\r\n            }\r\n        }\r\n  //index equal to pressed index\r\n  //generate occupied indices based on new height or remove entirely if size reduced.\r\n\r\n        else if(i === pressed_index){\r\n          if(toggle_type === true){\r\n            let n = 1;\r\n            while(n < Math.ceil(elements_list[i].offsetHeight / 420)){\r\n              this.main_array[i].push( this.main_array[i][0] + this.size * n);\r\n              press_array.push(this.main_array[i][0] + this.size * n);\r\n              n++;\r\n            }\r\n\r\n              first_indices_array.push(this.main_array[i][0]);\r\n          }\r\n\r\n          else{\r\n            this.main_array[i] = [this.main_array[i][0]];\r\n            press_array.push(i);\r\n            first_indices_array.push(this.main_array[i][0]);\r\n          }\r\n        }\r\n\r\n\r\n        //changing elements position accordingly\r\n        let height_stack_above = 0;\r\n        for(let j = this.main_array[i][0] - this.size;j >= 0;j-=this.size){\r\n          if(isFoundInArray(j, first_indices_array)){\r\n            let index = first_indices_array.indexOf(j);\r\n            height_stack_above = height_stack_above + elements_list[index].offsetHeight + 50;\r\n          }\r\n        }\r\n        height_array.push(height_stack_above + elements_list[i].offsetHeight);\r\n        elements_list[i].style.transform = `translate(${(this.main_array[i][0] % this.size) * this.element_base_span}px, ${height_stack_above}px)`\r\n\r\n      }\r\n      let max_height = (height_array.sort((a,b)=>b-a))[0];\r\n      let parent = (document.querySelector(`div.${this.parent_className}`));\r\n\r\n      parent.style.height = `${max_height + 50}px`\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  export default MasonryObject;","import React, {useState, useRef, useEffect, useContext} from 'react';\r\nimport {UserContext, NoteDataContext, EditNoteDataContext, EditNoteContext } from './Contexts';\r\nimport {convertNoteDatatoEditData, DeleteNoteWithId} from '../utilities/LocalStorage';\r\nimport MasonryObject from '../utilities/masonry';\r\nimport { v4 } from 'uuid';\r\n\r\n//create sample note data to test out functionality\r\n\r\nfunction NoteHeading(props){\r\n    return (<h3 className=\"note-drawer-heading\">Notes At A Glance</h3>)\r\n}\r\nfunction NoteTransactionBlock(props){\r\n    if(!props.data_array.length){\r\n        return null;\r\n    }\r\n    return(\r\n        <div className=\"transaction note-sub-block\">\r\n            <span>Transaction</span>\r\n            <div className=\"working-grid\" style={{gridTemplateColumns:`repeat(${props.data_array.length}, 100%)`}}>\r\n            {props.data_array.map((element, index)=>{\r\n                return <div type={element.data.transaction_type} key={index}>\r\n                    <span>{element.data.transaction_end}</span>\r\n                    <span>{element.data.transaction_type ? '-' : '+'} Rs {element.data.transaction_amt}</span>\r\n                </div>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nfunction NoteTextBlock(props){\r\n    if(!props.data_array.length){\r\n        return null;\r\n    }\r\n    return(\r\n        <div className=\"note-sub-block text\">\r\n            <span>Text</span>\r\n            <div className=\"working-grid\" style={{gridTemplateColumns:`repeat(${props.data_array.length}, 100%)`}}>\r\n                {\r\n                    props.data_array.map((element, index)=>{\r\n                        return <p key={index}>{element.data.text}</p>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nfunction NoteContactBlock(props){\r\n    if(!props.data_array.length){\r\n        return null;\r\n    }\r\n    return(\r\n        <div className=\"contact note-sub-block\">\r\n            <span>Contact</span>\r\n            <div className=\"working-grid\" style={{gridTemplateColumns:`repeat(${props.data_array.length}, 100%)`}}>\r\n            {props.data_array.map((element, index)=>{\r\n                return (<div key={index}>\r\n                            <div>\r\n                                <span></span>\r\n                                <span>{element.data.title}</span>\r\n                                <span>{element.data.contact_value}</span>\r\n                            </div>\r\n                        </div>\r\n                );\r\n            })}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nfunction NoteLinkBlock(props){\r\n\r\n    if(!props.data_array.length){\r\n        return null;\r\n    }\r\n\r\n    return(\r\n        <div className=\"note-sub-block link\">\r\n            <span>Link</span>\r\n            <div className=\"working-grid\" style={{gridTemplateColumns : `repeat(${props.data_array.length}, 100%)`, gridGap:'0px 2em'}}>\r\n            {props.data_array.map((element, index)=>{\r\n                return(\r\n                    <div key={index}>\r\n                        <span></span>\r\n                        <span>{element.data.title}</span>\r\n                        <span>{element.data.link_address.substr(0,40)}</span>\r\n                    </div>\r\n                );\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction NoteLocationBlock(props){\r\n    if(!props.data_array.length){\r\n        return null;\r\n    }\r\n    return(\r\n        <div className=\"note-sub-block location\">\r\n            <span>Location</span>\r\n            <div className=\"working-grid\" style={{gridGap:'0px 2em', gridTemplateColumns:`repeat(${props.data_array.length}, 100%)`}}>\r\n            {props.data_array.map((element, index)=>{\r\n                return(\r\n                    <div key={index}>\r\n                    <span></span>\r\n                    <div>\r\n                        <span>{element.data.title}</span>\r\n                        <p>{element.data.location_address}</p>\r\n                    </div>\r\n                    </div>\r\n                )\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction NoteListBlock(props){\r\n    if(!props.data_array.length){\r\n        return null;\r\n    }\r\n    return(\r\n        <div className=\"note-sub-block list\">\r\n            <span>{props.is_checked ? 'CheckList':'List'}</span>\r\n            <div className=\"working-grid\" style={{gridTemplateColumns:`repeat(${props.data_array.length}, 100%)`}}>\r\n            {props.data_array.map((element, index)=>{\r\n                return <ul key={index} is_checked={props.is_checked} >\r\n                            <span>{element.data.title}</span>\r\n                    {element.data.list_items.map((element,index)=>{\r\n                        return (<li key={index} check={element.checked}>\r\n                                    <i></i><span>{element.item}</span>\r\n                               </li>);\r\n                    })}\r\n                </ul>\r\n            })}\r\n        </div></div>\r\n    );\r\n}\r\n\r\nfunction NoteImageBlock(props){\r\n    if(!props.data_array.length){\r\n        return null;\r\n    }\r\n    return(\r\n        <div className=\"note-sub-block image\">\r\n            <span>Image</span>\r\n            <div className=\"working-grid\" style={{gridTemplateColumns:`repeat(${props.data_array.length}, 100%)`}}>\r\n            {\r\n                props.data_array.map((element,index)=>{\r\n                    return(\r\n                        <div key={index}>\r\n                            <img src={element.data.image_url} alt=\"could not load\"/>\r\n                            <p>{element.data.image_caption}</p>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction NoteEventBlock(props){\r\n\r\n    if(!props.data_array.length){\r\n        return null;\r\n    }\r\n    return(\r\n        <div className=\"note-sub-block event\">\r\n            <span>Events</span>\r\n            <div className=\"working-grid\" style={{gridTemplateColumns:`repeat(${props.data_array.length}, 100%)`}}>\r\n            {props.data_array.map((element, index)=>{\r\n                return(<div key={index}>\r\n                    <span>{element.data.title.split(' ').map((element, index)=>{\r\n                        return <b key={index}>{element} </b>\r\n                    })}</span>\r\n                    <span><small>on</small> {new Date(element.data.year, element.data.month - 1, element.data.day).toDateString()} <small>at</small> {element.data.hours}:{element.data.minutes} HRS</span>\r\n                </div>)\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TitleBlock(props){\r\n    let [note_data, set_note_data] = useContext(NoteDataContext);\r\n    let user_data = useContext(UserContext)[0].username;\r\n    let set_edit_note_data = useContext(EditNoteDataContext)[1];\r\n    let set_edit_note_active = useContext(EditNoteContext)[1];\r\n    return(\r\n        <div className=\"title-block\">\r\n            <h2>{props.title}</h2>\r\n            <div className=\"btn-group\">\r\n                <span onClick={(e)=>{\r\n                    e.target.parentNode.parentNode.parentNode.parentNode.style.transform +=' scale(0)';\r\n                    setTimeout(()=>{\r\n                        set_note_data(note_data.filter((element, index)=>{\r\n                            return element.id !== note_data[props.index].id;\r\n                        }));\r\n                        DeleteNoteWithId(note_data[props.index].id, user_data);\r\n                    },400)\r\n                }}></span> {/*this is the delete button*/}\r\n                <span></span> {/*this is the share button*/}\r\n                <span onClick={()=>{\r\n                    set_edit_note_data([...convertNoteDatatoEditData(note_data[props.index])]);\r\n                    set_edit_note_active(1);\r\n                }}></span> {/*this is the edit button*/}\r\n            </div>\r\n            <span>Added on {props.date_created}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction NoteBlock(props){\r\n    return(\r\n        <div className=\"note-block\">\r\n            <TitleBlock index={props.index} title={props.title} date_created={props.date_created}/>\r\n            <NoteTextBlock data_array={props.texts}/>\r\n            <NoteContactBlock data_array={props.contacts}/>\r\n            <NoteTransactionBlock data_array={props.transactions}/>\r\n            <NoteListBlock data_array={props.checklists} is_checked={1}/>\r\n            <NoteListBlock data_array={props.lists} is_checked={0}/>\r\n            <NoteImageBlock data_array={props.images}/>\r\n            <NoteLinkBlock data_array={props.links}/>\r\n            <NoteEventBlock data_array={props.events}/>\r\n            <NoteLocationBlock data_array={props.locations}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet ResizeContext = React.createContext();\r\n\r\nfunction NoteCollection(props){\r\n\r\n    let note_data = useContext(NoteDataContext)[0];\r\n    let [resize_event, set_resize_event] = useState(0);\r\n    let collection_ref = useRef(null);\r\n    let size_ref = useRef(window.innerWidth > 1270 ? 3 : (window.innerWidth < 700) ? 1 : 2);\r\n    let masonry_object = useRef(new MasonryObject({\r\n        main_className : 'note-block-collapse-btn-wrapper',\r\n        parent_className:'note-collection',\r\n        size:size_ref.current,\r\n        count:note_data.length,\r\n        element_base_height:450,\r\n        element_base_span:440\r\n    }));\r\n    useEffect(()=>{\r\n        if(window.innerWidth < 800){\r\n            masonry_object.current.changeSizeAndMainArray(1);\r\n            collection_ref.current.style.marginLeft = `calc(50% - 220px)`;\r\n        }\r\n        else if(window.innerWidth < 1270){\r\n            masonry_object.current.changeSizeAndMainArray(2);\r\n            collection_ref.current.style.marginLeft = `calc(50% - 440px)`;\r\n        }\r\n        else if(window.innerWidth > 1270){\r\n            masonry_object.current.changeSizeAndMainArray(3);\r\n            collection_ref.current.style.marginLeft = `calc(50% - 660px)`;\r\n        }\r\n    },[note_data])\r\n    let timeoutIntervalId = -1;\r\n    window.onresize = (()=>{\r\n        clearTimeout(timeoutIntervalId);\r\n        timeoutIntervalId = setTimeout(()=>{\r\n\r\n            if(window.innerWidth < 800){\r\n                masonry_object.current.changeSizeAndMainArray(1);\r\n                collection_ref.current.style.marginLeft = `calc(50% - 220px)`;\r\n            }\r\n            else if(window.innerWidth < 1270){\r\n                masonry_object.current.changeSizeAndMainArray(2);\r\n                collection_ref.current.style.marginLeft = `calc(50% - 440px)`;\r\n            }\r\n            else if(window.innerWidth > 1270){\r\n                masonry_object.current.changeSizeAndMainArray(3);\r\n                collection_ref.current.style.marginLeft = `calc(50% - 660px)`;\r\n            }\r\n        })\r\n    })\r\n\r\n    return (<div className=\"note-collection\" ref={collection_ref}>\r\n    <ResizeContext.Provider value={[resize_event, set_resize_event]}>\r\n    {\r\n        note_data.map((element, index)=>{\r\n            return (\r\n            <div className=\"note-block-collapse-btn-wrapper\" key={element.id}> {/*style={{transform:`translate(${(index % size_ref.current) * 420}px, ${Math.floor(index / size_ref.current) * 450}px)`}} */}\r\n                <NoteBlock\r\n                index={index}\r\n                title={element.title || 'Note Title Here'}\r\n                date_created={element.date_created}\r\n                texts={element.texts || []}\r\n                events={element.events || []}\r\n                images={element.images || []}\r\n                locations={element.locations || []}\r\n                transactions={element.transactions || []}\r\n                checklists={element.checklists || []}\r\n                lists={element.lists || []}\r\n                links={element.links || []}\r\n                contacts={element.contacts || []}\r\n                />\r\n                <span onClick={(e)=>{\r\n                    e.target.parentNode.classList.toggle('expand');\r\n                    masonry_object.current.SetLayout(index, e.target.parentNode.classList.contains('expand'));\r\n                }}>Expand</span>\r\n        </div>\r\n            )\r\n        })\r\n    }\r\n    </ResizeContext.Provider>\r\n    </div>);\r\n}\r\n//all note-blocks based on the different possible categories\r\n\r\n\r\n\r\nfunction NotesBoard(props){\r\n    return(\r\n        <React.Fragment>\r\n            <NoteHeading/>\r\n            <NoteCollection/>\r\n       </React.Fragment>\r\n    );\r\n}\r\nexport default NotesBoard;","import React from 'react';\r\nfunction Header(props){\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"logo\"></div>\r\n            <span>Take <i>Notes</i></span>\r\n        </div>\r\n    );\r\n}\r\nexport default Header;","import React, {useState} from 'react';\r\n\r\nfunction SearchBarCategory(props){\r\n    let categories = ['Date Created', 'Only Images', 'Content Size'];\r\n    let [current_category, set_category] = useState(0);\r\n    return(\r\n        <div className=\"search-category\">\r\n            <span>Sort By</span>\r\n            <span onClick={(e)=>{\r\n                set_category((current_category + 1) % 3);\r\n            }}>{categories[current_category]}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction SearchBar(props){\r\n    return(\r\n        <div className=\"search-bar-wrapper\">\r\n            <h1>Your Past <i>Notes</i></h1>\r\n            <div className=\"search-bar\">\r\n                <input type=\"text\" placeholder=\"Type in to Search ...\"/>\r\n                <span></span>\r\n            </div>\r\n            <SearchBarCategory/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default SearchBar;","import React , {useState, useRef, useContext, useEffect} from 'react';\nimport './App.css';\nimport {New_Note} from './components/New_Note';\nimport EditNote from './components/EditNote';\nimport NotesBoard from './components/NotesBoard';\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar';\nimport {addUser, returnUserList, getUserId, AddFromSession, AddToSession, returnNotesList} from './utilities/LocalStorage';\nimport { v4 } from 'uuid';\n\nimport {AlertContext, UserContext, EditNoteContext, EditNoteDataContext, NoteDataContext} from './components/Contexts';\n\nfunction UserWrapper(props){\n  let [user_data, set_user_data] = useState({username:'',userId:'',logged_in:false});\n  let user_list = useState(returnUserList())[0];\n  let [note_data, set_note_data] = useState(returnNotesList(user_data.username) || []);\n  useEffect(()=>{\n    if(user_data.username !== ''){\n      addUser(user_data);\n      AddToSession(user_data);\n    }\n  }, [user_data])\n  return(\n    <UserContext.Provider value={[user_data, set_user_data]}>\n      <NoteDataContext.Provider value={[note_data, set_note_data]}>\n          <LoginWindow user_list={user_list} visible={Number(user_data.logged_in)}/>\n            <MainPage logged_in={Number(user_data.logged_in)}>\n                {props.children}\n            </MainPage>\n     </NoteDataContext.Provider>\n    </UserContext.Provider>\n  );\n}\n\nfunction MainPage(props){\n  return <div className=\"main\">\n    {props.logged_in ? props.children : null}\n  </div>\n}\n\nfunction AppWrapper(props){\n  let [alert, set_alert] = useState([0,'Are you sure you want to delete ??']); // format ['alert type', 'alert text']\n  let [visible, set_visible] = useState(0);\n  let [edit_note_data, set_edit_note_data] = useState([]);\n  return <AlertContext.Provider value={[alert, set_alert]}>\n        <EditNoteDataContext.Provider value={[edit_note_data, set_edit_note_data]}>\n          <EditNoteContext.Provider value={[visible, set_visible]}>\n            {props.children}\n          </EditNoteContext.Provider>\n        </EditNoteDataContext.Provider>\n  </AlertContext.Provider>\n}\n\nfunction AlertWindow(props){\n  let [alert,set_alert] = useContext(AlertContext);\n  return(\n    <div className=\"alert-window\" type={alert[0]}>\n      <div className=\"alert-box\">\n        <span>{alert[1]}</span>\n        <span className=\"close\" onClick={()=>{\n          set_alert([0,'no-alert']);\n        }}></span>\n      </div>\n    </div>\n  )\n\n}\n\nfunction LoginWindow(props){\n  let set_user_data = useContext(UserContext)[1];\n  let input_ref = useRef(null);\n  let [status, set_status] = useState(0);\n  useEffect(()=>{\n    let session_user = AddFromSession();\n    if(session_user !== null){\n      set_user_data(JSON.parse(session_user));\n      console.log(JSON.parse(session_user));\n    }\n  },[set_user_data])\n  if(props.visible){\n    return null;\n  }\n  return(\n    <div className=\"login-window\">\n      <span className=\"login-error\" visible={status}>Please enter a valid name to continue.</span>\n      <div className=\"main-logo\"></div>\n      <h1>Take <i>Notes</i></h1>\n      <input type=\"text\" ref={input_ref} placeholder={\"Enter A Name\"}/>\n      <button onClick={(e)=>{\n        if(input_ref.current.value === ''){\n          set_status(1);\n          setTimeout(()=>set_status(0),3000);\n        }\n        else{\n          set_user_data({username:input_ref.current.value, userId:v4(), logged_in:true});\n        }\n\n      }}>Start Taking Notes <i></i></button>\n      {props.user_list.length > 0 ? (<h3 className=\"note-drawer-heading\" style={{marginTop:'4em', marginBottom:'0px'}}>Previous Logins</h3>) : null}\n      <ul className=\"user-list-past\">\n      {props.user_list.map((element, index)=>{\n        return <li key={index} onClick={()=>{\n          set_user_data({username:element,userId:getUserId(element),logged_in:true});\n        }}>{element}</li>\n      })}\n      </ul>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <UserWrapper>\n      <AppWrapper>\n        <Header/>\n        <AlertWindow/>\n        <New_Note/>\n        <SearchBar/>\n        <NotesBoard/>\n        <EditNote/>\n      </AppWrapper>\n    </UserWrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}